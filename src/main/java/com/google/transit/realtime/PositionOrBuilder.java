// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: main/resources/gtfs-realtime.proto

package com.google.transit.realtime;

public interface PositionOrBuilder extends
    // @@protoc_insertion_point(interface_extends:transit_realtime.Position)
    com.google.protobuf.GeneratedMessageV3.
        ExtendableMessageOrBuilder<Position> {

  /**
   * <pre>
   * Degrees North, in the WGS-84 coordinate system.
   * </pre>
   *
   * <code>required float latitude = 1;</code>
   * @return Whether the latitude field is set.
   */
  boolean hasLatitude();
  /**
   * <pre>
   * Degrees North, in the WGS-84 coordinate system.
   * </pre>
   *
   * <code>required float latitude = 1;</code>
   * @return The latitude.
   */
  float getLatitude();

  /**
   * <pre>
   * Degrees East, in the WGS-84 coordinate system.
   * </pre>
   *
   * <code>required float longitude = 2;</code>
   * @return Whether the longitude field is set.
   */
  boolean hasLongitude();
  /**
   * <pre>
   * Degrees East, in the WGS-84 coordinate system.
   * </pre>
   *
   * <code>required float longitude = 2;</code>
   * @return The longitude.
   */
  float getLongitude();

  /**
   * <pre>
   * Bearing, in degrees, clockwise from North, i.e., 0 is North and 90 is East.
   * This can be the compass bearing, or the direction towards the next stop
   * or intermediate location.
   * This should not be direction deduced from the sequence of previous
   * positions, which can be computed from previous data.
   * </pre>
   *
   * <code>optional float bearing = 3;</code>
   * @return Whether the bearing field is set.
   */
  boolean hasBearing();
  /**
   * <pre>
   * Bearing, in degrees, clockwise from North, i.e., 0 is North and 90 is East.
   * This can be the compass bearing, or the direction towards the next stop
   * or intermediate location.
   * This should not be direction deduced from the sequence of previous
   * positions, which can be computed from previous data.
   * </pre>
   *
   * <code>optional float bearing = 3;</code>
   * @return The bearing.
   */
  float getBearing();

  /**
   * <pre>
   * Odometer value, in meters.
   * </pre>
   *
   * <code>optional double odometer = 4;</code>
   * @return Whether the odometer field is set.
   */
  boolean hasOdometer();
  /**
   * <pre>
   * Odometer value, in meters.
   * </pre>
   *
   * <code>optional double odometer = 4;</code>
   * @return The odometer.
   */
  double getOdometer();

  /**
   * <pre>
   * Momentary speed measured by the vehicle, in meters per second.
   * </pre>
   *
   * <code>optional float speed = 5;</code>
   * @return Whether the speed field is set.
   */
  boolean hasSpeed();
  /**
   * <pre>
   * Momentary speed measured by the vehicle, in meters per second.
   * </pre>
   *
   * <code>optional float speed = 5;</code>
   * @return The speed.
   */
  float getSpeed();
}
