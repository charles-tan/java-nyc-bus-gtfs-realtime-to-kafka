// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: main/resources/gtfs-realtime.proto

package com.google.transit.realtime;

/**
 * <pre>
 * An alert, indicating some sort of incident in the public transit network.
 * </pre>
 *
 * Protobuf type {@code transit_realtime.Alert}
 */
public final class Alert extends
    com.google.protobuf.GeneratedMessageV3.ExtendableMessage<
      Alert> implements
    // @@protoc_insertion_point(message_implements:transit_realtime.Alert)
    AlertOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Alert.newBuilder() to construct.
  private Alert(com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<com.google.transit.realtime.Alert, ?> builder) {
    super(builder);
  }
  private Alert() {
    activePeriod_ = java.util.Collections.emptyList();
    informedEntity_ = java.util.Collections.emptyList();
    cause_ = 1;
    effect_ = 8;
    severityLevel_ = 1;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Alert();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.transit.realtime.GtfsRealtime.internal_static_transit_realtime_Alert_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.transit.realtime.GtfsRealtime.internal_static_transit_realtime_Alert_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.transit.realtime.Alert.class, com.google.transit.realtime.Alert.Builder.class);
  }

  /**
   * <pre>
   * Cause of this alert. If cause_detail is included, then Cause must also be included.
   * </pre>
   *
   * Protobuf enum {@code transit_realtime.Alert.Cause}
   */
  public enum Cause
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_CAUSE = 1;</code>
     */
    UNKNOWN_CAUSE(1),
    /**
     * <pre>
     * Not machine-representable.
     * </pre>
     *
     * <code>OTHER_CAUSE = 2;</code>
     */
    OTHER_CAUSE(2),
    /**
     * <code>TECHNICAL_PROBLEM = 3;</code>
     */
    TECHNICAL_PROBLEM(3),
    /**
     * <pre>
     * Public transit agency employees stopped working.
     * </pre>
     *
     * <code>STRIKE = 4;</code>
     */
    STRIKE(4),
    /**
     * <pre>
     * People are blocking the streets.
     * </pre>
     *
     * <code>DEMONSTRATION = 5;</code>
     */
    DEMONSTRATION(5),
    /**
     * <code>ACCIDENT = 6;</code>
     */
    ACCIDENT(6),
    /**
     * <code>HOLIDAY = 7;</code>
     */
    HOLIDAY(7),
    /**
     * <code>WEATHER = 8;</code>
     */
    WEATHER(8),
    /**
     * <code>MAINTENANCE = 9;</code>
     */
    MAINTENANCE(9),
    /**
     * <code>CONSTRUCTION = 10;</code>
     */
    CONSTRUCTION(10),
    /**
     * <code>POLICE_ACTIVITY = 11;</code>
     */
    POLICE_ACTIVITY(11),
    /**
     * <code>MEDICAL_EMERGENCY = 12;</code>
     */
    MEDICAL_EMERGENCY(12),
    ;

    /**
     * <code>UNKNOWN_CAUSE = 1;</code>
     */
    public static final int UNKNOWN_CAUSE_VALUE = 1;
    /**
     * <pre>
     * Not machine-representable.
     * </pre>
     *
     * <code>OTHER_CAUSE = 2;</code>
     */
    public static final int OTHER_CAUSE_VALUE = 2;
    /**
     * <code>TECHNICAL_PROBLEM = 3;</code>
     */
    public static final int TECHNICAL_PROBLEM_VALUE = 3;
    /**
     * <pre>
     * Public transit agency employees stopped working.
     * </pre>
     *
     * <code>STRIKE = 4;</code>
     */
    public static final int STRIKE_VALUE = 4;
    /**
     * <pre>
     * People are blocking the streets.
     * </pre>
     *
     * <code>DEMONSTRATION = 5;</code>
     */
    public static final int DEMONSTRATION_VALUE = 5;
    /**
     * <code>ACCIDENT = 6;</code>
     */
    public static final int ACCIDENT_VALUE = 6;
    /**
     * <code>HOLIDAY = 7;</code>
     */
    public static final int HOLIDAY_VALUE = 7;
    /**
     * <code>WEATHER = 8;</code>
     */
    public static final int WEATHER_VALUE = 8;
    /**
     * <code>MAINTENANCE = 9;</code>
     */
    public static final int MAINTENANCE_VALUE = 9;
    /**
     * <code>CONSTRUCTION = 10;</code>
     */
    public static final int CONSTRUCTION_VALUE = 10;
    /**
     * <code>POLICE_ACTIVITY = 11;</code>
     */
    public static final int POLICE_ACTIVITY_VALUE = 11;
    /**
     * <code>MEDICAL_EMERGENCY = 12;</code>
     */
    public static final int MEDICAL_EMERGENCY_VALUE = 12;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Cause valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Cause forNumber(int value) {
      switch (value) {
        case 1: return UNKNOWN_CAUSE;
        case 2: return OTHER_CAUSE;
        case 3: return TECHNICAL_PROBLEM;
        case 4: return STRIKE;
        case 5: return DEMONSTRATION;
        case 6: return ACCIDENT;
        case 7: return HOLIDAY;
        case 8: return WEATHER;
        case 9: return MAINTENANCE;
        case 10: return CONSTRUCTION;
        case 11: return POLICE_ACTIVITY;
        case 12: return MEDICAL_EMERGENCY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Cause>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Cause> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Cause>() {
            public Cause findValueByNumber(int number) {
              return Cause.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.transit.realtime.Alert.getDescriptor().getEnumTypes().get(0);
    }

    private static final Cause[] VALUES = values();

    public static Cause valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Cause(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:transit_realtime.Alert.Cause)
  }

  /**
   * <pre>
   * What is the effect of this problem on the affected entity. If effect_detail is included, then Effect must also be included.
   * </pre>
   *
   * Protobuf enum {@code transit_realtime.Alert.Effect}
   */
  public enum Effect
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NO_SERVICE = 1;</code>
     */
    NO_SERVICE(1),
    /**
     * <code>REDUCED_SERVICE = 2;</code>
     */
    REDUCED_SERVICE(2),
    /**
     * <pre>
     * We don't care about INsignificant delays: they are hard to detect, have
     * little impact on the user, and would clutter the results as they are too
     * frequent.
     * </pre>
     *
     * <code>SIGNIFICANT_DELAYS = 3;</code>
     */
    SIGNIFICANT_DELAYS(3),
    /**
     * <code>DETOUR = 4;</code>
     */
    DETOUR(4),
    /**
     * <code>ADDITIONAL_SERVICE = 5;</code>
     */
    ADDITIONAL_SERVICE(5),
    /**
     * <code>MODIFIED_SERVICE = 6;</code>
     */
    MODIFIED_SERVICE(6),
    /**
     * <code>OTHER_EFFECT = 7;</code>
     */
    OTHER_EFFECT(7),
    /**
     * <code>UNKNOWN_EFFECT = 8;</code>
     */
    UNKNOWN_EFFECT(8),
    /**
     * <code>STOP_MOVED = 9;</code>
     */
    STOP_MOVED(9),
    /**
     * <code>NO_EFFECT = 10;</code>
     */
    NO_EFFECT(10),
    /**
     * <code>ACCESSIBILITY_ISSUE = 11;</code>
     */
    ACCESSIBILITY_ISSUE(11),
    ;

    /**
     * <code>NO_SERVICE = 1;</code>
     */
    public static final int NO_SERVICE_VALUE = 1;
    /**
     * <code>REDUCED_SERVICE = 2;</code>
     */
    public static final int REDUCED_SERVICE_VALUE = 2;
    /**
     * <pre>
     * We don't care about INsignificant delays: they are hard to detect, have
     * little impact on the user, and would clutter the results as they are too
     * frequent.
     * </pre>
     *
     * <code>SIGNIFICANT_DELAYS = 3;</code>
     */
    public static final int SIGNIFICANT_DELAYS_VALUE = 3;
    /**
     * <code>DETOUR = 4;</code>
     */
    public static final int DETOUR_VALUE = 4;
    /**
     * <code>ADDITIONAL_SERVICE = 5;</code>
     */
    public static final int ADDITIONAL_SERVICE_VALUE = 5;
    /**
     * <code>MODIFIED_SERVICE = 6;</code>
     */
    public static final int MODIFIED_SERVICE_VALUE = 6;
    /**
     * <code>OTHER_EFFECT = 7;</code>
     */
    public static final int OTHER_EFFECT_VALUE = 7;
    /**
     * <code>UNKNOWN_EFFECT = 8;</code>
     */
    public static final int UNKNOWN_EFFECT_VALUE = 8;
    /**
     * <code>STOP_MOVED = 9;</code>
     */
    public static final int STOP_MOVED_VALUE = 9;
    /**
     * <code>NO_EFFECT = 10;</code>
     */
    public static final int NO_EFFECT_VALUE = 10;
    /**
     * <code>ACCESSIBILITY_ISSUE = 11;</code>
     */
    public static final int ACCESSIBILITY_ISSUE_VALUE = 11;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Effect valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Effect forNumber(int value) {
      switch (value) {
        case 1: return NO_SERVICE;
        case 2: return REDUCED_SERVICE;
        case 3: return SIGNIFICANT_DELAYS;
        case 4: return DETOUR;
        case 5: return ADDITIONAL_SERVICE;
        case 6: return MODIFIED_SERVICE;
        case 7: return OTHER_EFFECT;
        case 8: return UNKNOWN_EFFECT;
        case 9: return STOP_MOVED;
        case 10: return NO_EFFECT;
        case 11: return ACCESSIBILITY_ISSUE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Effect>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Effect> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Effect>() {
            public Effect findValueByNumber(int number) {
              return Effect.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.transit.realtime.Alert.getDescriptor().getEnumTypes().get(1);
    }

    private static final Effect[] VALUES = values();

    public static Effect valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Effect(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:transit_realtime.Alert.Effect)
  }

  /**
   * <pre>
   * Severity of this alert.
   * </pre>
   *
   * Protobuf enum {@code transit_realtime.Alert.SeverityLevel}
   */
  public enum SeverityLevel
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_SEVERITY = 1;</code>
     */
    UNKNOWN_SEVERITY(1),
    /**
     * <code>INFO = 2;</code>
     */
    INFO(2),
    /**
     * <code>WARNING = 3;</code>
     */
    WARNING(3),
    /**
     * <code>SEVERE = 4;</code>
     */
    SEVERE(4),
    ;

    /**
     * <code>UNKNOWN_SEVERITY = 1;</code>
     */
    public static final int UNKNOWN_SEVERITY_VALUE = 1;
    /**
     * <code>INFO = 2;</code>
     */
    public static final int INFO_VALUE = 2;
    /**
     * <code>WARNING = 3;</code>
     */
    public static final int WARNING_VALUE = 3;
    /**
     * <code>SEVERE = 4;</code>
     */
    public static final int SEVERE_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SeverityLevel valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SeverityLevel forNumber(int value) {
      switch (value) {
        case 1: return UNKNOWN_SEVERITY;
        case 2: return INFO;
        case 3: return WARNING;
        case 4: return SEVERE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SeverityLevel>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SeverityLevel> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SeverityLevel>() {
            public SeverityLevel findValueByNumber(int number) {
              return SeverityLevel.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.transit.realtime.Alert.getDescriptor().getEnumTypes().get(2);
    }

    private static final SeverityLevel[] VALUES = values();

    public static SeverityLevel valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SeverityLevel(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:transit_realtime.Alert.SeverityLevel)
  }

  private int bitField0_;
  public static final int ACTIVE_PERIOD_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private java.util.List<com.google.transit.realtime.TimeRange> activePeriod_;
  /**
   * <pre>
   * Time when the alert should be shown to the user. If missing, the
   * alert will be shown as long as it appears in the feed.
   * If multiple ranges are given, the alert will be shown during all of them.
   * </pre>
   *
   * <code>repeated .transit_realtime.TimeRange active_period = 1;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.transit.realtime.TimeRange> getActivePeriodList() {
    return activePeriod_;
  }
  /**
   * <pre>
   * Time when the alert should be shown to the user. If missing, the
   * alert will be shown as long as it appears in the feed.
   * If multiple ranges are given, the alert will be shown during all of them.
   * </pre>
   *
   * <code>repeated .transit_realtime.TimeRange active_period = 1;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.transit.realtime.TimeRangeOrBuilder> 
      getActivePeriodOrBuilderList() {
    return activePeriod_;
  }
  /**
   * <pre>
   * Time when the alert should be shown to the user. If missing, the
   * alert will be shown as long as it appears in the feed.
   * If multiple ranges are given, the alert will be shown during all of them.
   * </pre>
   *
   * <code>repeated .transit_realtime.TimeRange active_period = 1;</code>
   */
  @java.lang.Override
  public int getActivePeriodCount() {
    return activePeriod_.size();
  }
  /**
   * <pre>
   * Time when the alert should be shown to the user. If missing, the
   * alert will be shown as long as it appears in the feed.
   * If multiple ranges are given, the alert will be shown during all of them.
   * </pre>
   *
   * <code>repeated .transit_realtime.TimeRange active_period = 1;</code>
   */
  @java.lang.Override
  public com.google.transit.realtime.TimeRange getActivePeriod(int index) {
    return activePeriod_.get(index);
  }
  /**
   * <pre>
   * Time when the alert should be shown to the user. If missing, the
   * alert will be shown as long as it appears in the feed.
   * If multiple ranges are given, the alert will be shown during all of them.
   * </pre>
   *
   * <code>repeated .transit_realtime.TimeRange active_period = 1;</code>
   */
  @java.lang.Override
  public com.google.transit.realtime.TimeRangeOrBuilder getActivePeriodOrBuilder(
      int index) {
    return activePeriod_.get(index);
  }

  public static final int INFORMED_ENTITY_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private java.util.List<com.google.transit.realtime.EntitySelector> informedEntity_;
  /**
   * <pre>
   * Entities whose users we should notify of this alert.
   * </pre>
   *
   * <code>repeated .transit_realtime.EntitySelector informed_entity = 5;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.transit.realtime.EntitySelector> getInformedEntityList() {
    return informedEntity_;
  }
  /**
   * <pre>
   * Entities whose users we should notify of this alert.
   * </pre>
   *
   * <code>repeated .transit_realtime.EntitySelector informed_entity = 5;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.transit.realtime.EntitySelectorOrBuilder> 
      getInformedEntityOrBuilderList() {
    return informedEntity_;
  }
  /**
   * <pre>
   * Entities whose users we should notify of this alert.
   * </pre>
   *
   * <code>repeated .transit_realtime.EntitySelector informed_entity = 5;</code>
   */
  @java.lang.Override
  public int getInformedEntityCount() {
    return informedEntity_.size();
  }
  /**
   * <pre>
   * Entities whose users we should notify of this alert.
   * </pre>
   *
   * <code>repeated .transit_realtime.EntitySelector informed_entity = 5;</code>
   */
  @java.lang.Override
  public com.google.transit.realtime.EntitySelector getInformedEntity(int index) {
    return informedEntity_.get(index);
  }
  /**
   * <pre>
   * Entities whose users we should notify of this alert.
   * </pre>
   *
   * <code>repeated .transit_realtime.EntitySelector informed_entity = 5;</code>
   */
  @java.lang.Override
  public com.google.transit.realtime.EntitySelectorOrBuilder getInformedEntityOrBuilder(
      int index) {
    return informedEntity_.get(index);
  }

  public static final int CAUSE_FIELD_NUMBER = 6;
  private int cause_ = 1;
  /**
   * <code>optional .transit_realtime.Alert.Cause cause = 6 [default = UNKNOWN_CAUSE];</code>
   * @return Whether the cause field is set.
   */
  @java.lang.Override public boolean hasCause() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>optional .transit_realtime.Alert.Cause cause = 6 [default = UNKNOWN_CAUSE];</code>
   * @return The cause.
   */
  @java.lang.Override public com.google.transit.realtime.Alert.Cause getCause() {
    com.google.transit.realtime.Alert.Cause result = com.google.transit.realtime.Alert.Cause.forNumber(cause_);
    return result == null ? com.google.transit.realtime.Alert.Cause.UNKNOWN_CAUSE : result;
  }

  public static final int EFFECT_FIELD_NUMBER = 7;
  private int effect_ = 8;
  /**
   * <code>optional .transit_realtime.Alert.Effect effect = 7 [default = UNKNOWN_EFFECT];</code>
   * @return Whether the effect field is set.
   */
  @java.lang.Override public boolean hasEffect() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <code>optional .transit_realtime.Alert.Effect effect = 7 [default = UNKNOWN_EFFECT];</code>
   * @return The effect.
   */
  @java.lang.Override public com.google.transit.realtime.Alert.Effect getEffect() {
    com.google.transit.realtime.Alert.Effect result = com.google.transit.realtime.Alert.Effect.forNumber(effect_);
    return result == null ? com.google.transit.realtime.Alert.Effect.UNKNOWN_EFFECT : result;
  }

  public static final int URL_FIELD_NUMBER = 8;
  private com.google.transit.realtime.TranslatedString url_;
  /**
   * <pre>
   * The URL which provides additional information about the alert.
   * </pre>
   *
   * <code>optional .transit_realtime.TranslatedString url = 8;</code>
   * @return Whether the url field is set.
   */
  @java.lang.Override
  public boolean hasUrl() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * The URL which provides additional information about the alert.
   * </pre>
   *
   * <code>optional .transit_realtime.TranslatedString url = 8;</code>
   * @return The url.
   */
  @java.lang.Override
  public com.google.transit.realtime.TranslatedString getUrl() {
    return url_ == null ? com.google.transit.realtime.TranslatedString.getDefaultInstance() : url_;
  }
  /**
   * <pre>
   * The URL which provides additional information about the alert.
   * </pre>
   *
   * <code>optional .transit_realtime.TranslatedString url = 8;</code>
   */
  @java.lang.Override
  public com.google.transit.realtime.TranslatedStringOrBuilder getUrlOrBuilder() {
    return url_ == null ? com.google.transit.realtime.TranslatedString.getDefaultInstance() : url_;
  }

  public static final int HEADER_TEXT_FIELD_NUMBER = 10;
  private com.google.transit.realtime.TranslatedString headerText_;
  /**
   * <pre>
   * Alert header. Contains a short summary of the alert text as plain-text.
   * </pre>
   *
   * <code>optional .transit_realtime.TranslatedString header_text = 10;</code>
   * @return Whether the headerText field is set.
   */
  @java.lang.Override
  public boolean hasHeaderText() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * Alert header. Contains a short summary of the alert text as plain-text.
   * </pre>
   *
   * <code>optional .transit_realtime.TranslatedString header_text = 10;</code>
   * @return The headerText.
   */
  @java.lang.Override
  public com.google.transit.realtime.TranslatedString getHeaderText() {
    return headerText_ == null ? com.google.transit.realtime.TranslatedString.getDefaultInstance() : headerText_;
  }
  /**
   * <pre>
   * Alert header. Contains a short summary of the alert text as plain-text.
   * </pre>
   *
   * <code>optional .transit_realtime.TranslatedString header_text = 10;</code>
   */
  @java.lang.Override
  public com.google.transit.realtime.TranslatedStringOrBuilder getHeaderTextOrBuilder() {
    return headerText_ == null ? com.google.transit.realtime.TranslatedString.getDefaultInstance() : headerText_;
  }

  public static final int DESCRIPTION_TEXT_FIELD_NUMBER = 11;
  private com.google.transit.realtime.TranslatedString descriptionText_;
  /**
   * <pre>
   * Full description for the alert as plain-text. The information in the
   * description should add to the information of the header.
   * </pre>
   *
   * <code>optional .transit_realtime.TranslatedString description_text = 11;</code>
   * @return Whether the descriptionText field is set.
   */
  @java.lang.Override
  public boolean hasDescriptionText() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * Full description for the alert as plain-text. The information in the
   * description should add to the information of the header.
   * </pre>
   *
   * <code>optional .transit_realtime.TranslatedString description_text = 11;</code>
   * @return The descriptionText.
   */
  @java.lang.Override
  public com.google.transit.realtime.TranslatedString getDescriptionText() {
    return descriptionText_ == null ? com.google.transit.realtime.TranslatedString.getDefaultInstance() : descriptionText_;
  }
  /**
   * <pre>
   * Full description for the alert as plain-text. The information in the
   * description should add to the information of the header.
   * </pre>
   *
   * <code>optional .transit_realtime.TranslatedString description_text = 11;</code>
   */
  @java.lang.Override
  public com.google.transit.realtime.TranslatedStringOrBuilder getDescriptionTextOrBuilder() {
    return descriptionText_ == null ? com.google.transit.realtime.TranslatedString.getDefaultInstance() : descriptionText_;
  }

  public static final int TTS_HEADER_TEXT_FIELD_NUMBER = 12;
  private com.google.transit.realtime.TranslatedString ttsHeaderText_;
  /**
   * <pre>
   * Text for alert header to be used in text-to-speech implementations. This field is the text-to-speech version of header_text.
   * </pre>
   *
   * <code>optional .transit_realtime.TranslatedString tts_header_text = 12;</code>
   * @return Whether the ttsHeaderText field is set.
   */
  @java.lang.Override
  public boolean hasTtsHeaderText() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * Text for alert header to be used in text-to-speech implementations. This field is the text-to-speech version of header_text.
   * </pre>
   *
   * <code>optional .transit_realtime.TranslatedString tts_header_text = 12;</code>
   * @return The ttsHeaderText.
   */
  @java.lang.Override
  public com.google.transit.realtime.TranslatedString getTtsHeaderText() {
    return ttsHeaderText_ == null ? com.google.transit.realtime.TranslatedString.getDefaultInstance() : ttsHeaderText_;
  }
  /**
   * <pre>
   * Text for alert header to be used in text-to-speech implementations. This field is the text-to-speech version of header_text.
   * </pre>
   *
   * <code>optional .transit_realtime.TranslatedString tts_header_text = 12;</code>
   */
  @java.lang.Override
  public com.google.transit.realtime.TranslatedStringOrBuilder getTtsHeaderTextOrBuilder() {
    return ttsHeaderText_ == null ? com.google.transit.realtime.TranslatedString.getDefaultInstance() : ttsHeaderText_;
  }

  public static final int TTS_DESCRIPTION_TEXT_FIELD_NUMBER = 13;
  private com.google.transit.realtime.TranslatedString ttsDescriptionText_;
  /**
   * <pre>
   * Text for full description for the alert to be used in text-to-speech implementations. This field is the text-to-speech version of description_text.
   * </pre>
   *
   * <code>optional .transit_realtime.TranslatedString tts_description_text = 13;</code>
   * @return Whether the ttsDescriptionText field is set.
   */
  @java.lang.Override
  public boolean hasTtsDescriptionText() {
    return ((bitField0_ & 0x00000040) != 0);
  }
  /**
   * <pre>
   * Text for full description for the alert to be used in text-to-speech implementations. This field is the text-to-speech version of description_text.
   * </pre>
   *
   * <code>optional .transit_realtime.TranslatedString tts_description_text = 13;</code>
   * @return The ttsDescriptionText.
   */
  @java.lang.Override
  public com.google.transit.realtime.TranslatedString getTtsDescriptionText() {
    return ttsDescriptionText_ == null ? com.google.transit.realtime.TranslatedString.getDefaultInstance() : ttsDescriptionText_;
  }
  /**
   * <pre>
   * Text for full description for the alert to be used in text-to-speech implementations. This field is the text-to-speech version of description_text.
   * </pre>
   *
   * <code>optional .transit_realtime.TranslatedString tts_description_text = 13;</code>
   */
  @java.lang.Override
  public com.google.transit.realtime.TranslatedStringOrBuilder getTtsDescriptionTextOrBuilder() {
    return ttsDescriptionText_ == null ? com.google.transit.realtime.TranslatedString.getDefaultInstance() : ttsDescriptionText_;
  }

  public static final int SEVERITY_LEVEL_FIELD_NUMBER = 14;
  private int severityLevel_ = 1;
  /**
   * <code>optional .transit_realtime.Alert.SeverityLevel severity_level = 14 [default = UNKNOWN_SEVERITY];</code>
   * @return Whether the severityLevel field is set.
   */
  @java.lang.Override public boolean hasSeverityLevel() {
    return ((bitField0_ & 0x00000080) != 0);
  }
  /**
   * <code>optional .transit_realtime.Alert.SeverityLevel severity_level = 14 [default = UNKNOWN_SEVERITY];</code>
   * @return The severityLevel.
   */
  @java.lang.Override public com.google.transit.realtime.Alert.SeverityLevel getSeverityLevel() {
    com.google.transit.realtime.Alert.SeverityLevel result = com.google.transit.realtime.Alert.SeverityLevel.forNumber(severityLevel_);
    return result == null ? com.google.transit.realtime.Alert.SeverityLevel.UNKNOWN_SEVERITY : result;
  }

  public static final int IMAGE_FIELD_NUMBER = 15;
  private com.google.transit.realtime.TranslatedImage image_;
  /**
   * <pre>
   * TranslatedImage to be displayed along the alert text. Used to explain visually the alert effect of a detour, station closure, etc. The image must enhance the understanding of the alert. Any essential information communicated within the image must also be contained in the alert text.
   * The following types of images are discouraged : image containing mainly text, marketing or branded images that add no additional information. 
   * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
   * </pre>
   *
   * <code>optional .transit_realtime.TranslatedImage image = 15;</code>
   * @return Whether the image field is set.
   */
  @java.lang.Override
  public boolean hasImage() {
    return ((bitField0_ & 0x00000100) != 0);
  }
  /**
   * <pre>
   * TranslatedImage to be displayed along the alert text. Used to explain visually the alert effect of a detour, station closure, etc. The image must enhance the understanding of the alert. Any essential information communicated within the image must also be contained in the alert text.
   * The following types of images are discouraged : image containing mainly text, marketing or branded images that add no additional information. 
   * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
   * </pre>
   *
   * <code>optional .transit_realtime.TranslatedImage image = 15;</code>
   * @return The image.
   */
  @java.lang.Override
  public com.google.transit.realtime.TranslatedImage getImage() {
    return image_ == null ? com.google.transit.realtime.TranslatedImage.getDefaultInstance() : image_;
  }
  /**
   * <pre>
   * TranslatedImage to be displayed along the alert text. Used to explain visually the alert effect of a detour, station closure, etc. The image must enhance the understanding of the alert. Any essential information communicated within the image must also be contained in the alert text.
   * The following types of images are discouraged : image containing mainly text, marketing or branded images that add no additional information. 
   * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
   * </pre>
   *
   * <code>optional .transit_realtime.TranslatedImage image = 15;</code>
   */
  @java.lang.Override
  public com.google.transit.realtime.TranslatedImageOrBuilder getImageOrBuilder() {
    return image_ == null ? com.google.transit.realtime.TranslatedImage.getDefaultInstance() : image_;
  }

  public static final int IMAGE_ALTERNATIVE_TEXT_FIELD_NUMBER = 16;
  private com.google.transit.realtime.TranslatedString imageAlternativeText_;
  /**
   * <pre>
   * Text describing the appearance of the linked image in the `image` field (e.g., in case the image can't be displayed
   * or the user can't see the image for accessibility reasons). See the HTML spec for alt image text - https://html.spec.whatwg.org/#alt.
   * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
   * </pre>
   *
   * <code>optional .transit_realtime.TranslatedString image_alternative_text = 16;</code>
   * @return Whether the imageAlternativeText field is set.
   */
  @java.lang.Override
  public boolean hasImageAlternativeText() {
    return ((bitField0_ & 0x00000200) != 0);
  }
  /**
   * <pre>
   * Text describing the appearance of the linked image in the `image` field (e.g., in case the image can't be displayed
   * or the user can't see the image for accessibility reasons). See the HTML spec for alt image text - https://html.spec.whatwg.org/#alt.
   * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
   * </pre>
   *
   * <code>optional .transit_realtime.TranslatedString image_alternative_text = 16;</code>
   * @return The imageAlternativeText.
   */
  @java.lang.Override
  public com.google.transit.realtime.TranslatedString getImageAlternativeText() {
    return imageAlternativeText_ == null ? com.google.transit.realtime.TranslatedString.getDefaultInstance() : imageAlternativeText_;
  }
  /**
   * <pre>
   * Text describing the appearance of the linked image in the `image` field (e.g., in case the image can't be displayed
   * or the user can't see the image for accessibility reasons). See the HTML spec for alt image text - https://html.spec.whatwg.org/#alt.
   * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
   * </pre>
   *
   * <code>optional .transit_realtime.TranslatedString image_alternative_text = 16;</code>
   */
  @java.lang.Override
  public com.google.transit.realtime.TranslatedStringOrBuilder getImageAlternativeTextOrBuilder() {
    return imageAlternativeText_ == null ? com.google.transit.realtime.TranslatedString.getDefaultInstance() : imageAlternativeText_;
  }

  public static final int CAUSE_DETAIL_FIELD_NUMBER = 17;
  private com.google.transit.realtime.TranslatedString causeDetail_;
  /**
   * <pre>
   * Description of the cause of the alert that allows for agency-specific language; more specific than the Cause. If cause_detail is included, then Cause must also be included.
   * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
   * </pre>
   *
   * <code>optional .transit_realtime.TranslatedString cause_detail = 17;</code>
   * @return Whether the causeDetail field is set.
   */
  @java.lang.Override
  public boolean hasCauseDetail() {
    return ((bitField0_ & 0x00000400) != 0);
  }
  /**
   * <pre>
   * Description of the cause of the alert that allows for agency-specific language; more specific than the Cause. If cause_detail is included, then Cause must also be included.
   * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
   * </pre>
   *
   * <code>optional .transit_realtime.TranslatedString cause_detail = 17;</code>
   * @return The causeDetail.
   */
  @java.lang.Override
  public com.google.transit.realtime.TranslatedString getCauseDetail() {
    return causeDetail_ == null ? com.google.transit.realtime.TranslatedString.getDefaultInstance() : causeDetail_;
  }
  /**
   * <pre>
   * Description of the cause of the alert that allows for agency-specific language; more specific than the Cause. If cause_detail is included, then Cause must also be included.
   * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
   * </pre>
   *
   * <code>optional .transit_realtime.TranslatedString cause_detail = 17;</code>
   */
  @java.lang.Override
  public com.google.transit.realtime.TranslatedStringOrBuilder getCauseDetailOrBuilder() {
    return causeDetail_ == null ? com.google.transit.realtime.TranslatedString.getDefaultInstance() : causeDetail_;
  }

  public static final int EFFECT_DETAIL_FIELD_NUMBER = 18;
  private com.google.transit.realtime.TranslatedString effectDetail_;
  /**
   * <pre>
   * Description of the effect of the alert that allows for agency-specific language; more specific than the Effect. If effect_detail is included, then Effect must also be included.
   * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
   * </pre>
   *
   * <code>optional .transit_realtime.TranslatedString effect_detail = 18;</code>
   * @return Whether the effectDetail field is set.
   */
  @java.lang.Override
  public boolean hasEffectDetail() {
    return ((bitField0_ & 0x00000800) != 0);
  }
  /**
   * <pre>
   * Description of the effect of the alert that allows for agency-specific language; more specific than the Effect. If effect_detail is included, then Effect must also be included.
   * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
   * </pre>
   *
   * <code>optional .transit_realtime.TranslatedString effect_detail = 18;</code>
   * @return The effectDetail.
   */
  @java.lang.Override
  public com.google.transit.realtime.TranslatedString getEffectDetail() {
    return effectDetail_ == null ? com.google.transit.realtime.TranslatedString.getDefaultInstance() : effectDetail_;
  }
  /**
   * <pre>
   * Description of the effect of the alert that allows for agency-specific language; more specific than the Effect. If effect_detail is included, then Effect must also be included.
   * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
   * </pre>
   *
   * <code>optional .transit_realtime.TranslatedString effect_detail = 18;</code>
   */
  @java.lang.Override
  public com.google.transit.realtime.TranslatedStringOrBuilder getEffectDetailOrBuilder() {
    return effectDetail_ == null ? com.google.transit.realtime.TranslatedString.getDefaultInstance() : effectDetail_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    for (int i = 0; i < getActivePeriodCount(); i++) {
      if (!getActivePeriod(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    for (int i = 0; i < getInformedEntityCount(); i++) {
      if (!getInformedEntity(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasUrl()) {
      if (!getUrl().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasHeaderText()) {
      if (!getHeaderText().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasDescriptionText()) {
      if (!getDescriptionText().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasTtsHeaderText()) {
      if (!getTtsHeaderText().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasTtsDescriptionText()) {
      if (!getTtsDescriptionText().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasImage()) {
      if (!getImage().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasImageAlternativeText()) {
      if (!getImageAlternativeText().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasCauseDetail()) {
      if (!getCauseDetail().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasEffectDetail()) {
      if (!getEffectDetail().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (!extensionsAreInitialized()) {
      memoizedIsInitialized = 0;
      return false;
    }
    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    com.google.protobuf.GeneratedMessageV3
      .ExtendableMessage<com.google.transit.realtime.Alert>.ExtensionWriter
        extensionWriter = newExtensionWriter();
    for (int i = 0; i < activePeriod_.size(); i++) {
      output.writeMessage(1, activePeriod_.get(i));
    }
    for (int i = 0; i < informedEntity_.size(); i++) {
      output.writeMessage(5, informedEntity_.get(i));
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeEnum(6, cause_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeEnum(7, effect_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeMessage(8, getUrl());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeMessage(10, getHeaderText());
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeMessage(11, getDescriptionText());
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      output.writeMessage(12, getTtsHeaderText());
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      output.writeMessage(13, getTtsDescriptionText());
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      output.writeEnum(14, severityLevel_);
    }
    if (((bitField0_ & 0x00000100) != 0)) {
      output.writeMessage(15, getImage());
    }
    if (((bitField0_ & 0x00000200) != 0)) {
      output.writeMessage(16, getImageAlternativeText());
    }
    if (((bitField0_ & 0x00000400) != 0)) {
      output.writeMessage(17, getCauseDetail());
    }
    if (((bitField0_ & 0x00000800) != 0)) {
      output.writeMessage(18, getEffectDetail());
    }
    extensionWriter.writeUntil(10000, output);
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < activePeriod_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, activePeriod_.get(i));
    }
    for (int i = 0; i < informedEntity_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, informedEntity_.get(i));
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(6, cause_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(7, effect_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, getUrl());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, getHeaderText());
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, getDescriptionText());
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, getTtsHeaderText());
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, getTtsDescriptionText());
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(14, severityLevel_);
    }
    if (((bitField0_ & 0x00000100) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(15, getImage());
    }
    if (((bitField0_ & 0x00000200) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(16, getImageAlternativeText());
    }
    if (((bitField0_ & 0x00000400) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(17, getCauseDetail());
    }
    if (((bitField0_ & 0x00000800) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(18, getEffectDetail());
    }
    size += extensionsSerializedSize();
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.transit.realtime.Alert)) {
      return super.equals(obj);
    }
    com.google.transit.realtime.Alert other = (com.google.transit.realtime.Alert) obj;

    if (!getActivePeriodList()
        .equals(other.getActivePeriodList())) return false;
    if (!getInformedEntityList()
        .equals(other.getInformedEntityList())) return false;
    if (hasCause() != other.hasCause()) return false;
    if (hasCause()) {
      if (cause_ != other.cause_) return false;
    }
    if (hasEffect() != other.hasEffect()) return false;
    if (hasEffect()) {
      if (effect_ != other.effect_) return false;
    }
    if (hasUrl() != other.hasUrl()) return false;
    if (hasUrl()) {
      if (!getUrl()
          .equals(other.getUrl())) return false;
    }
    if (hasHeaderText() != other.hasHeaderText()) return false;
    if (hasHeaderText()) {
      if (!getHeaderText()
          .equals(other.getHeaderText())) return false;
    }
    if (hasDescriptionText() != other.hasDescriptionText()) return false;
    if (hasDescriptionText()) {
      if (!getDescriptionText()
          .equals(other.getDescriptionText())) return false;
    }
    if (hasTtsHeaderText() != other.hasTtsHeaderText()) return false;
    if (hasTtsHeaderText()) {
      if (!getTtsHeaderText()
          .equals(other.getTtsHeaderText())) return false;
    }
    if (hasTtsDescriptionText() != other.hasTtsDescriptionText()) return false;
    if (hasTtsDescriptionText()) {
      if (!getTtsDescriptionText()
          .equals(other.getTtsDescriptionText())) return false;
    }
    if (hasSeverityLevel() != other.hasSeverityLevel()) return false;
    if (hasSeverityLevel()) {
      if (severityLevel_ != other.severityLevel_) return false;
    }
    if (hasImage() != other.hasImage()) return false;
    if (hasImage()) {
      if (!getImage()
          .equals(other.getImage())) return false;
    }
    if (hasImageAlternativeText() != other.hasImageAlternativeText()) return false;
    if (hasImageAlternativeText()) {
      if (!getImageAlternativeText()
          .equals(other.getImageAlternativeText())) return false;
    }
    if (hasCauseDetail() != other.hasCauseDetail()) return false;
    if (hasCauseDetail()) {
      if (!getCauseDetail()
          .equals(other.getCauseDetail())) return false;
    }
    if (hasEffectDetail() != other.hasEffectDetail()) return false;
    if (hasEffectDetail()) {
      if (!getEffectDetail()
          .equals(other.getEffectDetail())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    if (!getExtensionFields().equals(other.getExtensionFields()))
      return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getActivePeriodCount() > 0) {
      hash = (37 * hash) + ACTIVE_PERIOD_FIELD_NUMBER;
      hash = (53 * hash) + getActivePeriodList().hashCode();
    }
    if (getInformedEntityCount() > 0) {
      hash = (37 * hash) + INFORMED_ENTITY_FIELD_NUMBER;
      hash = (53 * hash) + getInformedEntityList().hashCode();
    }
    if (hasCause()) {
      hash = (37 * hash) + CAUSE_FIELD_NUMBER;
      hash = (53 * hash) + cause_;
    }
    if (hasEffect()) {
      hash = (37 * hash) + EFFECT_FIELD_NUMBER;
      hash = (53 * hash) + effect_;
    }
    if (hasUrl()) {
      hash = (37 * hash) + URL_FIELD_NUMBER;
      hash = (53 * hash) + getUrl().hashCode();
    }
    if (hasHeaderText()) {
      hash = (37 * hash) + HEADER_TEXT_FIELD_NUMBER;
      hash = (53 * hash) + getHeaderText().hashCode();
    }
    if (hasDescriptionText()) {
      hash = (37 * hash) + DESCRIPTION_TEXT_FIELD_NUMBER;
      hash = (53 * hash) + getDescriptionText().hashCode();
    }
    if (hasTtsHeaderText()) {
      hash = (37 * hash) + TTS_HEADER_TEXT_FIELD_NUMBER;
      hash = (53 * hash) + getTtsHeaderText().hashCode();
    }
    if (hasTtsDescriptionText()) {
      hash = (37 * hash) + TTS_DESCRIPTION_TEXT_FIELD_NUMBER;
      hash = (53 * hash) + getTtsDescriptionText().hashCode();
    }
    if (hasSeverityLevel()) {
      hash = (37 * hash) + SEVERITY_LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + severityLevel_;
    }
    if (hasImage()) {
      hash = (37 * hash) + IMAGE_FIELD_NUMBER;
      hash = (53 * hash) + getImage().hashCode();
    }
    if (hasImageAlternativeText()) {
      hash = (37 * hash) + IMAGE_ALTERNATIVE_TEXT_FIELD_NUMBER;
      hash = (53 * hash) + getImageAlternativeText().hashCode();
    }
    if (hasCauseDetail()) {
      hash = (37 * hash) + CAUSE_DETAIL_FIELD_NUMBER;
      hash = (53 * hash) + getCauseDetail().hashCode();
    }
    if (hasEffectDetail()) {
      hash = (37 * hash) + EFFECT_DETAIL_FIELD_NUMBER;
      hash = (53 * hash) + getEffectDetail().hashCode();
    }
    hash = hashFields(hash, getExtensionFields());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.transit.realtime.Alert parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.transit.realtime.Alert parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.transit.realtime.Alert parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.transit.realtime.Alert parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.transit.realtime.Alert parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.transit.realtime.Alert parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.transit.realtime.Alert parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.transit.realtime.Alert parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.google.transit.realtime.Alert parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.transit.realtime.Alert parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.transit.realtime.Alert parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.transit.realtime.Alert parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.transit.realtime.Alert prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * An alert, indicating some sort of incident in the public transit network.
   * </pre>
   *
   * Protobuf type {@code transit_realtime.Alert}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<
        com.google.transit.realtime.Alert, Builder> implements
      // @@protoc_insertion_point(builder_implements:transit_realtime.Alert)
      com.google.transit.realtime.AlertOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.transit.realtime.GtfsRealtime.internal_static_transit_realtime_Alert_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.transit.realtime.GtfsRealtime.internal_static_transit_realtime_Alert_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.transit.realtime.Alert.class, com.google.transit.realtime.Alert.Builder.class);
    }

    // Construct using com.google.transit.realtime.Alert.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getActivePeriodFieldBuilder();
        getInformedEntityFieldBuilder();
        getUrlFieldBuilder();
        getHeaderTextFieldBuilder();
        getDescriptionTextFieldBuilder();
        getTtsHeaderTextFieldBuilder();
        getTtsDescriptionTextFieldBuilder();
        getImageFieldBuilder();
        getImageAlternativeTextFieldBuilder();
        getCauseDetailFieldBuilder();
        getEffectDetailFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (activePeriodBuilder_ == null) {
        activePeriod_ = java.util.Collections.emptyList();
      } else {
        activePeriod_ = null;
        activePeriodBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      if (informedEntityBuilder_ == null) {
        informedEntity_ = java.util.Collections.emptyList();
      } else {
        informedEntity_ = null;
        informedEntityBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      cause_ = 1;
      effect_ = 8;
      url_ = null;
      if (urlBuilder_ != null) {
        urlBuilder_.dispose();
        urlBuilder_ = null;
      }
      headerText_ = null;
      if (headerTextBuilder_ != null) {
        headerTextBuilder_.dispose();
        headerTextBuilder_ = null;
      }
      descriptionText_ = null;
      if (descriptionTextBuilder_ != null) {
        descriptionTextBuilder_.dispose();
        descriptionTextBuilder_ = null;
      }
      ttsHeaderText_ = null;
      if (ttsHeaderTextBuilder_ != null) {
        ttsHeaderTextBuilder_.dispose();
        ttsHeaderTextBuilder_ = null;
      }
      ttsDescriptionText_ = null;
      if (ttsDescriptionTextBuilder_ != null) {
        ttsDescriptionTextBuilder_.dispose();
        ttsDescriptionTextBuilder_ = null;
      }
      severityLevel_ = 1;
      image_ = null;
      if (imageBuilder_ != null) {
        imageBuilder_.dispose();
        imageBuilder_ = null;
      }
      imageAlternativeText_ = null;
      if (imageAlternativeTextBuilder_ != null) {
        imageAlternativeTextBuilder_.dispose();
        imageAlternativeTextBuilder_ = null;
      }
      causeDetail_ = null;
      if (causeDetailBuilder_ != null) {
        causeDetailBuilder_.dispose();
        causeDetailBuilder_ = null;
      }
      effectDetail_ = null;
      if (effectDetailBuilder_ != null) {
        effectDetailBuilder_.dispose();
        effectDetailBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.transit.realtime.GtfsRealtime.internal_static_transit_realtime_Alert_descriptor;
    }

    @java.lang.Override
    public com.google.transit.realtime.Alert getDefaultInstanceForType() {
      return com.google.transit.realtime.Alert.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.transit.realtime.Alert build() {
      com.google.transit.realtime.Alert result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.transit.realtime.Alert buildPartial() {
      com.google.transit.realtime.Alert result = new com.google.transit.realtime.Alert(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.google.transit.realtime.Alert result) {
      if (activePeriodBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          activePeriod_ = java.util.Collections.unmodifiableList(activePeriod_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.activePeriod_ = activePeriod_;
      } else {
        result.activePeriod_ = activePeriodBuilder_.build();
      }
      if (informedEntityBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          informedEntity_ = java.util.Collections.unmodifiableList(informedEntity_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.informedEntity_ = informedEntity_;
      } else {
        result.informedEntity_ = informedEntityBuilder_.build();
      }
    }

    private void buildPartial0(com.google.transit.realtime.Alert result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.cause_ = cause_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.effect_ = effect_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.url_ = urlBuilder_ == null
            ? url_
            : urlBuilder_.build();
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.headerText_ = headerTextBuilder_ == null
            ? headerText_
            : headerTextBuilder_.build();
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.descriptionText_ = descriptionTextBuilder_ == null
            ? descriptionText_
            : descriptionTextBuilder_.build();
        to_bitField0_ |= 0x00000010;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.ttsHeaderText_ = ttsHeaderTextBuilder_ == null
            ? ttsHeaderText_
            : ttsHeaderTextBuilder_.build();
        to_bitField0_ |= 0x00000020;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.ttsDescriptionText_ = ttsDescriptionTextBuilder_ == null
            ? ttsDescriptionText_
            : ttsDescriptionTextBuilder_.build();
        to_bitField0_ |= 0x00000040;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.severityLevel_ = severityLevel_;
        to_bitField0_ |= 0x00000080;
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.image_ = imageBuilder_ == null
            ? image_
            : imageBuilder_.build();
        to_bitField0_ |= 0x00000100;
      }
      if (((from_bitField0_ & 0x00000800) != 0)) {
        result.imageAlternativeText_ = imageAlternativeTextBuilder_ == null
            ? imageAlternativeText_
            : imageAlternativeTextBuilder_.build();
        to_bitField0_ |= 0x00000200;
      }
      if (((from_bitField0_ & 0x00001000) != 0)) {
        result.causeDetail_ = causeDetailBuilder_ == null
            ? causeDetail_
            : causeDetailBuilder_.build();
        to_bitField0_ |= 0x00000400;
      }
      if (((from_bitField0_ & 0x00002000) != 0)) {
        result.effectDetail_ = effectDetailBuilder_ == null
            ? effectDetail_
            : effectDetailBuilder_.build();
        to_bitField0_ |= 0x00000800;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public <Type> Builder setExtension(
        com.google.protobuf.GeneratedMessage.GeneratedExtension<
            com.google.transit.realtime.Alert, Type> extension,
        Type value) {
      return super.setExtension(extension, value);
    }
    @java.lang.Override
    public <Type> Builder setExtension(
        com.google.protobuf.GeneratedMessage.GeneratedExtension<
            com.google.transit.realtime.Alert, java.util.List<Type>> extension,
        int index, Type value) {
      return super.setExtension(extension, index, value);
    }
    @java.lang.Override
    public <Type> Builder addExtension(
        com.google.protobuf.GeneratedMessage.GeneratedExtension<
            com.google.transit.realtime.Alert, java.util.List<Type>> extension,
        Type value) {
      return super.addExtension(extension, value);
    }
    @java.lang.Override
    public <T> Builder clearExtension(
        com.google.protobuf.GeneratedMessage.GeneratedExtension<
            com.google.transit.realtime.Alert, T> extension) {
      return super.clearExtension(extension);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.transit.realtime.Alert) {
        return mergeFrom((com.google.transit.realtime.Alert)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.transit.realtime.Alert other) {
      if (other == com.google.transit.realtime.Alert.getDefaultInstance()) return this;
      if (activePeriodBuilder_ == null) {
        if (!other.activePeriod_.isEmpty()) {
          if (activePeriod_.isEmpty()) {
            activePeriod_ = other.activePeriod_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureActivePeriodIsMutable();
            activePeriod_.addAll(other.activePeriod_);
          }
          onChanged();
        }
      } else {
        if (!other.activePeriod_.isEmpty()) {
          if (activePeriodBuilder_.isEmpty()) {
            activePeriodBuilder_.dispose();
            activePeriodBuilder_ = null;
            activePeriod_ = other.activePeriod_;
            bitField0_ = (bitField0_ & ~0x00000001);
            activePeriodBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getActivePeriodFieldBuilder() : null;
          } else {
            activePeriodBuilder_.addAllMessages(other.activePeriod_);
          }
        }
      }
      if (informedEntityBuilder_ == null) {
        if (!other.informedEntity_.isEmpty()) {
          if (informedEntity_.isEmpty()) {
            informedEntity_ = other.informedEntity_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureInformedEntityIsMutable();
            informedEntity_.addAll(other.informedEntity_);
          }
          onChanged();
        }
      } else {
        if (!other.informedEntity_.isEmpty()) {
          if (informedEntityBuilder_.isEmpty()) {
            informedEntityBuilder_.dispose();
            informedEntityBuilder_ = null;
            informedEntity_ = other.informedEntity_;
            bitField0_ = (bitField0_ & ~0x00000002);
            informedEntityBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getInformedEntityFieldBuilder() : null;
          } else {
            informedEntityBuilder_.addAllMessages(other.informedEntity_);
          }
        }
      }
      if (other.hasCause()) {
        setCause(other.getCause());
      }
      if (other.hasEffect()) {
        setEffect(other.getEffect());
      }
      if (other.hasUrl()) {
        mergeUrl(other.getUrl());
      }
      if (other.hasHeaderText()) {
        mergeHeaderText(other.getHeaderText());
      }
      if (other.hasDescriptionText()) {
        mergeDescriptionText(other.getDescriptionText());
      }
      if (other.hasTtsHeaderText()) {
        mergeTtsHeaderText(other.getTtsHeaderText());
      }
      if (other.hasTtsDescriptionText()) {
        mergeTtsDescriptionText(other.getTtsDescriptionText());
      }
      if (other.hasSeverityLevel()) {
        setSeverityLevel(other.getSeverityLevel());
      }
      if (other.hasImage()) {
        mergeImage(other.getImage());
      }
      if (other.hasImageAlternativeText()) {
        mergeImageAlternativeText(other.getImageAlternativeText());
      }
      if (other.hasCauseDetail()) {
        mergeCauseDetail(other.getCauseDetail());
      }
      if (other.hasEffectDetail()) {
        mergeEffectDetail(other.getEffectDetail());
      }
      this.mergeExtensionFields(other);
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      for (int i = 0; i < getActivePeriodCount(); i++) {
        if (!getActivePeriod(i).isInitialized()) {
          return false;
        }
      }
      for (int i = 0; i < getInformedEntityCount(); i++) {
        if (!getInformedEntity(i).isInitialized()) {
          return false;
        }
      }
      if (hasUrl()) {
        if (!getUrl().isInitialized()) {
          return false;
        }
      }
      if (hasHeaderText()) {
        if (!getHeaderText().isInitialized()) {
          return false;
        }
      }
      if (hasDescriptionText()) {
        if (!getDescriptionText().isInitialized()) {
          return false;
        }
      }
      if (hasTtsHeaderText()) {
        if (!getTtsHeaderText().isInitialized()) {
          return false;
        }
      }
      if (hasTtsDescriptionText()) {
        if (!getTtsDescriptionText().isInitialized()) {
          return false;
        }
      }
      if (hasImage()) {
        if (!getImage().isInitialized()) {
          return false;
        }
      }
      if (hasImageAlternativeText()) {
        if (!getImageAlternativeText().isInitialized()) {
          return false;
        }
      }
      if (hasCauseDetail()) {
        if (!getCauseDetail().isInitialized()) {
          return false;
        }
      }
      if (hasEffectDetail()) {
        if (!getEffectDetail().isInitialized()) {
          return false;
        }
      }
      if (!extensionsAreInitialized()) {
        return false;
      }
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.transit.realtime.TimeRange m =
                  input.readMessage(
                      com.google.transit.realtime.TimeRange.PARSER,
                      extensionRegistry);
              if (activePeriodBuilder_ == null) {
                ensureActivePeriodIsMutable();
                activePeriod_.add(m);
              } else {
                activePeriodBuilder_.addMessage(m);
              }
              break;
            } // case 10
            case 42: {
              com.google.transit.realtime.EntitySelector m =
                  input.readMessage(
                      com.google.transit.realtime.EntitySelector.PARSER,
                      extensionRegistry);
              if (informedEntityBuilder_ == null) {
                ensureInformedEntityIsMutable();
                informedEntity_.add(m);
              } else {
                informedEntityBuilder_.addMessage(m);
              }
              break;
            } // case 42
            case 48: {
              int tmpRaw = input.readEnum();
              com.google.transit.realtime.Alert.Cause tmpValue =
                  com.google.transit.realtime.Alert.Cause.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(6, tmpRaw);
              } else {
                cause_ = tmpRaw;
                bitField0_ |= 0x00000004;
              }
              break;
            } // case 48
            case 56: {
              int tmpRaw = input.readEnum();
              com.google.transit.realtime.Alert.Effect tmpValue =
                  com.google.transit.realtime.Alert.Effect.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(7, tmpRaw);
              } else {
                effect_ = tmpRaw;
                bitField0_ |= 0x00000008;
              }
              break;
            } // case 56
            case 66: {
              input.readMessage(
                  getUrlFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 66
            case 82: {
              input.readMessage(
                  getHeaderTextFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000020;
              break;
            } // case 82
            case 90: {
              input.readMessage(
                  getDescriptionTextFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000040;
              break;
            } // case 90
            case 98: {
              input.readMessage(
                  getTtsHeaderTextFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000080;
              break;
            } // case 98
            case 106: {
              input.readMessage(
                  getTtsDescriptionTextFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000100;
              break;
            } // case 106
            case 112: {
              int tmpRaw = input.readEnum();
              com.google.transit.realtime.Alert.SeverityLevel tmpValue =
                  com.google.transit.realtime.Alert.SeverityLevel.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(14, tmpRaw);
              } else {
                severityLevel_ = tmpRaw;
                bitField0_ |= 0x00000200;
              }
              break;
            } // case 112
            case 122: {
              input.readMessage(
                  getImageFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000400;
              break;
            } // case 122
            case 130: {
              input.readMessage(
                  getImageAlternativeTextFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000800;
              break;
            } // case 130
            case 138: {
              input.readMessage(
                  getCauseDetailFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00001000;
              break;
            } // case 138
            case 146: {
              input.readMessage(
                  getEffectDetailFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00002000;
              break;
            } // case 146
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.util.List<com.google.transit.realtime.TimeRange> activePeriod_ =
      java.util.Collections.emptyList();
    private void ensureActivePeriodIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        activePeriod_ = new java.util.ArrayList<com.google.transit.realtime.TimeRange>(activePeriod_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.transit.realtime.TimeRange, com.google.transit.realtime.TimeRange.Builder, com.google.transit.realtime.TimeRangeOrBuilder> activePeriodBuilder_;

    /**
     * <pre>
     * Time when the alert should be shown to the user. If missing, the
     * alert will be shown as long as it appears in the feed.
     * If multiple ranges are given, the alert will be shown during all of them.
     * </pre>
     *
     * <code>repeated .transit_realtime.TimeRange active_period = 1;</code>
     */
    public java.util.List<com.google.transit.realtime.TimeRange> getActivePeriodList() {
      if (activePeriodBuilder_ == null) {
        return java.util.Collections.unmodifiableList(activePeriod_);
      } else {
        return activePeriodBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Time when the alert should be shown to the user. If missing, the
     * alert will be shown as long as it appears in the feed.
     * If multiple ranges are given, the alert will be shown during all of them.
     * </pre>
     *
     * <code>repeated .transit_realtime.TimeRange active_period = 1;</code>
     */
    public int getActivePeriodCount() {
      if (activePeriodBuilder_ == null) {
        return activePeriod_.size();
      } else {
        return activePeriodBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Time when the alert should be shown to the user. If missing, the
     * alert will be shown as long as it appears in the feed.
     * If multiple ranges are given, the alert will be shown during all of them.
     * </pre>
     *
     * <code>repeated .transit_realtime.TimeRange active_period = 1;</code>
     */
    public com.google.transit.realtime.TimeRange getActivePeriod(int index) {
      if (activePeriodBuilder_ == null) {
        return activePeriod_.get(index);
      } else {
        return activePeriodBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Time when the alert should be shown to the user. If missing, the
     * alert will be shown as long as it appears in the feed.
     * If multiple ranges are given, the alert will be shown during all of them.
     * </pre>
     *
     * <code>repeated .transit_realtime.TimeRange active_period = 1;</code>
     */
    public Builder setActivePeriod(
        int index, com.google.transit.realtime.TimeRange value) {
      if (activePeriodBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureActivePeriodIsMutable();
        activePeriod_.set(index, value);
        onChanged();
      } else {
        activePeriodBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Time when the alert should be shown to the user. If missing, the
     * alert will be shown as long as it appears in the feed.
     * If multiple ranges are given, the alert will be shown during all of them.
     * </pre>
     *
     * <code>repeated .transit_realtime.TimeRange active_period = 1;</code>
     */
    public Builder setActivePeriod(
        int index, com.google.transit.realtime.TimeRange.Builder builderForValue) {
      if (activePeriodBuilder_ == null) {
        ensureActivePeriodIsMutable();
        activePeriod_.set(index, builderForValue.build());
        onChanged();
      } else {
        activePeriodBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Time when the alert should be shown to the user. If missing, the
     * alert will be shown as long as it appears in the feed.
     * If multiple ranges are given, the alert will be shown during all of them.
     * </pre>
     *
     * <code>repeated .transit_realtime.TimeRange active_period = 1;</code>
     */
    public Builder addActivePeriod(com.google.transit.realtime.TimeRange value) {
      if (activePeriodBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureActivePeriodIsMutable();
        activePeriod_.add(value);
        onChanged();
      } else {
        activePeriodBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Time when the alert should be shown to the user. If missing, the
     * alert will be shown as long as it appears in the feed.
     * If multiple ranges are given, the alert will be shown during all of them.
     * </pre>
     *
     * <code>repeated .transit_realtime.TimeRange active_period = 1;</code>
     */
    public Builder addActivePeriod(
        int index, com.google.transit.realtime.TimeRange value) {
      if (activePeriodBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureActivePeriodIsMutable();
        activePeriod_.add(index, value);
        onChanged();
      } else {
        activePeriodBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Time when the alert should be shown to the user. If missing, the
     * alert will be shown as long as it appears in the feed.
     * If multiple ranges are given, the alert will be shown during all of them.
     * </pre>
     *
     * <code>repeated .transit_realtime.TimeRange active_period = 1;</code>
     */
    public Builder addActivePeriod(
        com.google.transit.realtime.TimeRange.Builder builderForValue) {
      if (activePeriodBuilder_ == null) {
        ensureActivePeriodIsMutable();
        activePeriod_.add(builderForValue.build());
        onChanged();
      } else {
        activePeriodBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Time when the alert should be shown to the user. If missing, the
     * alert will be shown as long as it appears in the feed.
     * If multiple ranges are given, the alert will be shown during all of them.
     * </pre>
     *
     * <code>repeated .transit_realtime.TimeRange active_period = 1;</code>
     */
    public Builder addActivePeriod(
        int index, com.google.transit.realtime.TimeRange.Builder builderForValue) {
      if (activePeriodBuilder_ == null) {
        ensureActivePeriodIsMutable();
        activePeriod_.add(index, builderForValue.build());
        onChanged();
      } else {
        activePeriodBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Time when the alert should be shown to the user. If missing, the
     * alert will be shown as long as it appears in the feed.
     * If multiple ranges are given, the alert will be shown during all of them.
     * </pre>
     *
     * <code>repeated .transit_realtime.TimeRange active_period = 1;</code>
     */
    public Builder addAllActivePeriod(
        java.lang.Iterable<? extends com.google.transit.realtime.TimeRange> values) {
      if (activePeriodBuilder_ == null) {
        ensureActivePeriodIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, activePeriod_);
        onChanged();
      } else {
        activePeriodBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Time when the alert should be shown to the user. If missing, the
     * alert will be shown as long as it appears in the feed.
     * If multiple ranges are given, the alert will be shown during all of them.
     * </pre>
     *
     * <code>repeated .transit_realtime.TimeRange active_period = 1;</code>
     */
    public Builder clearActivePeriod() {
      if (activePeriodBuilder_ == null) {
        activePeriod_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        activePeriodBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Time when the alert should be shown to the user. If missing, the
     * alert will be shown as long as it appears in the feed.
     * If multiple ranges are given, the alert will be shown during all of them.
     * </pre>
     *
     * <code>repeated .transit_realtime.TimeRange active_period = 1;</code>
     */
    public Builder removeActivePeriod(int index) {
      if (activePeriodBuilder_ == null) {
        ensureActivePeriodIsMutable();
        activePeriod_.remove(index);
        onChanged();
      } else {
        activePeriodBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Time when the alert should be shown to the user. If missing, the
     * alert will be shown as long as it appears in the feed.
     * If multiple ranges are given, the alert will be shown during all of them.
     * </pre>
     *
     * <code>repeated .transit_realtime.TimeRange active_period = 1;</code>
     */
    public com.google.transit.realtime.TimeRange.Builder getActivePeriodBuilder(
        int index) {
      return getActivePeriodFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Time when the alert should be shown to the user. If missing, the
     * alert will be shown as long as it appears in the feed.
     * If multiple ranges are given, the alert will be shown during all of them.
     * </pre>
     *
     * <code>repeated .transit_realtime.TimeRange active_period = 1;</code>
     */
    public com.google.transit.realtime.TimeRangeOrBuilder getActivePeriodOrBuilder(
        int index) {
      if (activePeriodBuilder_ == null) {
        return activePeriod_.get(index);  } else {
        return activePeriodBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Time when the alert should be shown to the user. If missing, the
     * alert will be shown as long as it appears in the feed.
     * If multiple ranges are given, the alert will be shown during all of them.
     * </pre>
     *
     * <code>repeated .transit_realtime.TimeRange active_period = 1;</code>
     */
    public java.util.List<? extends com.google.transit.realtime.TimeRangeOrBuilder> 
         getActivePeriodOrBuilderList() {
      if (activePeriodBuilder_ != null) {
        return activePeriodBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(activePeriod_);
      }
    }
    /**
     * <pre>
     * Time when the alert should be shown to the user. If missing, the
     * alert will be shown as long as it appears in the feed.
     * If multiple ranges are given, the alert will be shown during all of them.
     * </pre>
     *
     * <code>repeated .transit_realtime.TimeRange active_period = 1;</code>
     */
    public com.google.transit.realtime.TimeRange.Builder addActivePeriodBuilder() {
      return getActivePeriodFieldBuilder().addBuilder(
          com.google.transit.realtime.TimeRange.getDefaultInstance());
    }
    /**
     * <pre>
     * Time when the alert should be shown to the user. If missing, the
     * alert will be shown as long as it appears in the feed.
     * If multiple ranges are given, the alert will be shown during all of them.
     * </pre>
     *
     * <code>repeated .transit_realtime.TimeRange active_period = 1;</code>
     */
    public com.google.transit.realtime.TimeRange.Builder addActivePeriodBuilder(
        int index) {
      return getActivePeriodFieldBuilder().addBuilder(
          index, com.google.transit.realtime.TimeRange.getDefaultInstance());
    }
    /**
     * <pre>
     * Time when the alert should be shown to the user. If missing, the
     * alert will be shown as long as it appears in the feed.
     * If multiple ranges are given, the alert will be shown during all of them.
     * </pre>
     *
     * <code>repeated .transit_realtime.TimeRange active_period = 1;</code>
     */
    public java.util.List<com.google.transit.realtime.TimeRange.Builder> 
         getActivePeriodBuilderList() {
      return getActivePeriodFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.transit.realtime.TimeRange, com.google.transit.realtime.TimeRange.Builder, com.google.transit.realtime.TimeRangeOrBuilder> 
        getActivePeriodFieldBuilder() {
      if (activePeriodBuilder_ == null) {
        activePeriodBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.transit.realtime.TimeRange, com.google.transit.realtime.TimeRange.Builder, com.google.transit.realtime.TimeRangeOrBuilder>(
                activePeriod_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        activePeriod_ = null;
      }
      return activePeriodBuilder_;
    }

    private java.util.List<com.google.transit.realtime.EntitySelector> informedEntity_ =
      java.util.Collections.emptyList();
    private void ensureInformedEntityIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        informedEntity_ = new java.util.ArrayList<com.google.transit.realtime.EntitySelector>(informedEntity_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.transit.realtime.EntitySelector, com.google.transit.realtime.EntitySelector.Builder, com.google.transit.realtime.EntitySelectorOrBuilder> informedEntityBuilder_;

    /**
     * <pre>
     * Entities whose users we should notify of this alert.
     * </pre>
     *
     * <code>repeated .transit_realtime.EntitySelector informed_entity = 5;</code>
     */
    public java.util.List<com.google.transit.realtime.EntitySelector> getInformedEntityList() {
      if (informedEntityBuilder_ == null) {
        return java.util.Collections.unmodifiableList(informedEntity_);
      } else {
        return informedEntityBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Entities whose users we should notify of this alert.
     * </pre>
     *
     * <code>repeated .transit_realtime.EntitySelector informed_entity = 5;</code>
     */
    public int getInformedEntityCount() {
      if (informedEntityBuilder_ == null) {
        return informedEntity_.size();
      } else {
        return informedEntityBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Entities whose users we should notify of this alert.
     * </pre>
     *
     * <code>repeated .transit_realtime.EntitySelector informed_entity = 5;</code>
     */
    public com.google.transit.realtime.EntitySelector getInformedEntity(int index) {
      if (informedEntityBuilder_ == null) {
        return informedEntity_.get(index);
      } else {
        return informedEntityBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Entities whose users we should notify of this alert.
     * </pre>
     *
     * <code>repeated .transit_realtime.EntitySelector informed_entity = 5;</code>
     */
    public Builder setInformedEntity(
        int index, com.google.transit.realtime.EntitySelector value) {
      if (informedEntityBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInformedEntityIsMutable();
        informedEntity_.set(index, value);
        onChanged();
      } else {
        informedEntityBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Entities whose users we should notify of this alert.
     * </pre>
     *
     * <code>repeated .transit_realtime.EntitySelector informed_entity = 5;</code>
     */
    public Builder setInformedEntity(
        int index, com.google.transit.realtime.EntitySelector.Builder builderForValue) {
      if (informedEntityBuilder_ == null) {
        ensureInformedEntityIsMutable();
        informedEntity_.set(index, builderForValue.build());
        onChanged();
      } else {
        informedEntityBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Entities whose users we should notify of this alert.
     * </pre>
     *
     * <code>repeated .transit_realtime.EntitySelector informed_entity = 5;</code>
     */
    public Builder addInformedEntity(com.google.transit.realtime.EntitySelector value) {
      if (informedEntityBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInformedEntityIsMutable();
        informedEntity_.add(value);
        onChanged();
      } else {
        informedEntityBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Entities whose users we should notify of this alert.
     * </pre>
     *
     * <code>repeated .transit_realtime.EntitySelector informed_entity = 5;</code>
     */
    public Builder addInformedEntity(
        int index, com.google.transit.realtime.EntitySelector value) {
      if (informedEntityBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInformedEntityIsMutable();
        informedEntity_.add(index, value);
        onChanged();
      } else {
        informedEntityBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Entities whose users we should notify of this alert.
     * </pre>
     *
     * <code>repeated .transit_realtime.EntitySelector informed_entity = 5;</code>
     */
    public Builder addInformedEntity(
        com.google.transit.realtime.EntitySelector.Builder builderForValue) {
      if (informedEntityBuilder_ == null) {
        ensureInformedEntityIsMutable();
        informedEntity_.add(builderForValue.build());
        onChanged();
      } else {
        informedEntityBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Entities whose users we should notify of this alert.
     * </pre>
     *
     * <code>repeated .transit_realtime.EntitySelector informed_entity = 5;</code>
     */
    public Builder addInformedEntity(
        int index, com.google.transit.realtime.EntitySelector.Builder builderForValue) {
      if (informedEntityBuilder_ == null) {
        ensureInformedEntityIsMutable();
        informedEntity_.add(index, builderForValue.build());
        onChanged();
      } else {
        informedEntityBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Entities whose users we should notify of this alert.
     * </pre>
     *
     * <code>repeated .transit_realtime.EntitySelector informed_entity = 5;</code>
     */
    public Builder addAllInformedEntity(
        java.lang.Iterable<? extends com.google.transit.realtime.EntitySelector> values) {
      if (informedEntityBuilder_ == null) {
        ensureInformedEntityIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, informedEntity_);
        onChanged();
      } else {
        informedEntityBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Entities whose users we should notify of this alert.
     * </pre>
     *
     * <code>repeated .transit_realtime.EntitySelector informed_entity = 5;</code>
     */
    public Builder clearInformedEntity() {
      if (informedEntityBuilder_ == null) {
        informedEntity_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        informedEntityBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Entities whose users we should notify of this alert.
     * </pre>
     *
     * <code>repeated .transit_realtime.EntitySelector informed_entity = 5;</code>
     */
    public Builder removeInformedEntity(int index) {
      if (informedEntityBuilder_ == null) {
        ensureInformedEntityIsMutable();
        informedEntity_.remove(index);
        onChanged();
      } else {
        informedEntityBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Entities whose users we should notify of this alert.
     * </pre>
     *
     * <code>repeated .transit_realtime.EntitySelector informed_entity = 5;</code>
     */
    public com.google.transit.realtime.EntitySelector.Builder getInformedEntityBuilder(
        int index) {
      return getInformedEntityFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Entities whose users we should notify of this alert.
     * </pre>
     *
     * <code>repeated .transit_realtime.EntitySelector informed_entity = 5;</code>
     */
    public com.google.transit.realtime.EntitySelectorOrBuilder getInformedEntityOrBuilder(
        int index) {
      if (informedEntityBuilder_ == null) {
        return informedEntity_.get(index);  } else {
        return informedEntityBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Entities whose users we should notify of this alert.
     * </pre>
     *
     * <code>repeated .transit_realtime.EntitySelector informed_entity = 5;</code>
     */
    public java.util.List<? extends com.google.transit.realtime.EntitySelectorOrBuilder> 
         getInformedEntityOrBuilderList() {
      if (informedEntityBuilder_ != null) {
        return informedEntityBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(informedEntity_);
      }
    }
    /**
     * <pre>
     * Entities whose users we should notify of this alert.
     * </pre>
     *
     * <code>repeated .transit_realtime.EntitySelector informed_entity = 5;</code>
     */
    public com.google.transit.realtime.EntitySelector.Builder addInformedEntityBuilder() {
      return getInformedEntityFieldBuilder().addBuilder(
          com.google.transit.realtime.EntitySelector.getDefaultInstance());
    }
    /**
     * <pre>
     * Entities whose users we should notify of this alert.
     * </pre>
     *
     * <code>repeated .transit_realtime.EntitySelector informed_entity = 5;</code>
     */
    public com.google.transit.realtime.EntitySelector.Builder addInformedEntityBuilder(
        int index) {
      return getInformedEntityFieldBuilder().addBuilder(
          index, com.google.transit.realtime.EntitySelector.getDefaultInstance());
    }
    /**
     * <pre>
     * Entities whose users we should notify of this alert.
     * </pre>
     *
     * <code>repeated .transit_realtime.EntitySelector informed_entity = 5;</code>
     */
    public java.util.List<com.google.transit.realtime.EntitySelector.Builder> 
         getInformedEntityBuilderList() {
      return getInformedEntityFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.transit.realtime.EntitySelector, com.google.transit.realtime.EntitySelector.Builder, com.google.transit.realtime.EntitySelectorOrBuilder> 
        getInformedEntityFieldBuilder() {
      if (informedEntityBuilder_ == null) {
        informedEntityBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.transit.realtime.EntitySelector, com.google.transit.realtime.EntitySelector.Builder, com.google.transit.realtime.EntitySelectorOrBuilder>(
                informedEntity_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        informedEntity_ = null;
      }
      return informedEntityBuilder_;
    }

    private int cause_ = 1;
    /**
     * <code>optional .transit_realtime.Alert.Cause cause = 6 [default = UNKNOWN_CAUSE];</code>
     * @return Whether the cause field is set.
     */
    @java.lang.Override public boolean hasCause() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional .transit_realtime.Alert.Cause cause = 6 [default = UNKNOWN_CAUSE];</code>
     * @return The cause.
     */
    @java.lang.Override
    public com.google.transit.realtime.Alert.Cause getCause() {
      com.google.transit.realtime.Alert.Cause result = com.google.transit.realtime.Alert.Cause.forNumber(cause_);
      return result == null ? com.google.transit.realtime.Alert.Cause.UNKNOWN_CAUSE : result;
    }
    /**
     * <code>optional .transit_realtime.Alert.Cause cause = 6 [default = UNKNOWN_CAUSE];</code>
     * @param value The cause to set.
     * @return This builder for chaining.
     */
    public Builder setCause(com.google.transit.realtime.Alert.Cause value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      cause_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>optional .transit_realtime.Alert.Cause cause = 6 [default = UNKNOWN_CAUSE];</code>
     * @return This builder for chaining.
     */
    public Builder clearCause() {
      bitField0_ = (bitField0_ & ~0x00000004);
      cause_ = 1;
      onChanged();
      return this;
    }

    private int effect_ = 8;
    /**
     * <code>optional .transit_realtime.Alert.Effect effect = 7 [default = UNKNOWN_EFFECT];</code>
     * @return Whether the effect field is set.
     */
    @java.lang.Override public boolean hasEffect() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional .transit_realtime.Alert.Effect effect = 7 [default = UNKNOWN_EFFECT];</code>
     * @return The effect.
     */
    @java.lang.Override
    public com.google.transit.realtime.Alert.Effect getEffect() {
      com.google.transit.realtime.Alert.Effect result = com.google.transit.realtime.Alert.Effect.forNumber(effect_);
      return result == null ? com.google.transit.realtime.Alert.Effect.UNKNOWN_EFFECT : result;
    }
    /**
     * <code>optional .transit_realtime.Alert.Effect effect = 7 [default = UNKNOWN_EFFECT];</code>
     * @param value The effect to set.
     * @return This builder for chaining.
     */
    public Builder setEffect(com.google.transit.realtime.Alert.Effect value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      effect_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>optional .transit_realtime.Alert.Effect effect = 7 [default = UNKNOWN_EFFECT];</code>
     * @return This builder for chaining.
     */
    public Builder clearEffect() {
      bitField0_ = (bitField0_ & ~0x00000008);
      effect_ = 8;
      onChanged();
      return this;
    }

    private com.google.transit.realtime.TranslatedString url_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.transit.realtime.TranslatedString, com.google.transit.realtime.TranslatedString.Builder, com.google.transit.realtime.TranslatedStringOrBuilder> urlBuilder_;
    /**
     * <pre>
     * The URL which provides additional information about the alert.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString url = 8;</code>
     * @return Whether the url field is set.
     */
    public boolean hasUrl() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * The URL which provides additional information about the alert.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString url = 8;</code>
     * @return The url.
     */
    public com.google.transit.realtime.TranslatedString getUrl() {
      if (urlBuilder_ == null) {
        return url_ == null ? com.google.transit.realtime.TranslatedString.getDefaultInstance() : url_;
      } else {
        return urlBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The URL which provides additional information about the alert.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString url = 8;</code>
     */
    public Builder setUrl(com.google.transit.realtime.TranslatedString value) {
      if (urlBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        url_ = value;
      } else {
        urlBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The URL which provides additional information about the alert.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString url = 8;</code>
     */
    public Builder setUrl(
        com.google.transit.realtime.TranslatedString.Builder builderForValue) {
      if (urlBuilder_ == null) {
        url_ = builderForValue.build();
      } else {
        urlBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The URL which provides additional information about the alert.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString url = 8;</code>
     */
    public Builder mergeUrl(com.google.transit.realtime.TranslatedString value) {
      if (urlBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          url_ != null &&
          url_ != com.google.transit.realtime.TranslatedString.getDefaultInstance()) {
          getUrlBuilder().mergeFrom(value);
        } else {
          url_ = value;
        }
      } else {
        urlBuilder_.mergeFrom(value);
      }
      if (url_ != null) {
        bitField0_ |= 0x00000010;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The URL which provides additional information about the alert.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString url = 8;</code>
     */
    public Builder clearUrl() {
      bitField0_ = (bitField0_ & ~0x00000010);
      url_ = null;
      if (urlBuilder_ != null) {
        urlBuilder_.dispose();
        urlBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The URL which provides additional information about the alert.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString url = 8;</code>
     */
    public com.google.transit.realtime.TranslatedString.Builder getUrlBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getUrlFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The URL which provides additional information about the alert.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString url = 8;</code>
     */
    public com.google.transit.realtime.TranslatedStringOrBuilder getUrlOrBuilder() {
      if (urlBuilder_ != null) {
        return urlBuilder_.getMessageOrBuilder();
      } else {
        return url_ == null ?
            com.google.transit.realtime.TranslatedString.getDefaultInstance() : url_;
      }
    }
    /**
     * <pre>
     * The URL which provides additional information about the alert.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString url = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.transit.realtime.TranslatedString, com.google.transit.realtime.TranslatedString.Builder, com.google.transit.realtime.TranslatedStringOrBuilder> 
        getUrlFieldBuilder() {
      if (urlBuilder_ == null) {
        urlBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.transit.realtime.TranslatedString, com.google.transit.realtime.TranslatedString.Builder, com.google.transit.realtime.TranslatedStringOrBuilder>(
                getUrl(),
                getParentForChildren(),
                isClean());
        url_ = null;
      }
      return urlBuilder_;
    }

    private com.google.transit.realtime.TranslatedString headerText_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.transit.realtime.TranslatedString, com.google.transit.realtime.TranslatedString.Builder, com.google.transit.realtime.TranslatedStringOrBuilder> headerTextBuilder_;
    /**
     * <pre>
     * Alert header. Contains a short summary of the alert text as plain-text.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString header_text = 10;</code>
     * @return Whether the headerText field is set.
     */
    public boolean hasHeaderText() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Alert header. Contains a short summary of the alert text as plain-text.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString header_text = 10;</code>
     * @return The headerText.
     */
    public com.google.transit.realtime.TranslatedString getHeaderText() {
      if (headerTextBuilder_ == null) {
        return headerText_ == null ? com.google.transit.realtime.TranslatedString.getDefaultInstance() : headerText_;
      } else {
        return headerTextBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Alert header. Contains a short summary of the alert text as plain-text.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString header_text = 10;</code>
     */
    public Builder setHeaderText(com.google.transit.realtime.TranslatedString value) {
      if (headerTextBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        headerText_ = value;
      } else {
        headerTextBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Alert header. Contains a short summary of the alert text as plain-text.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString header_text = 10;</code>
     */
    public Builder setHeaderText(
        com.google.transit.realtime.TranslatedString.Builder builderForValue) {
      if (headerTextBuilder_ == null) {
        headerText_ = builderForValue.build();
      } else {
        headerTextBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Alert header. Contains a short summary of the alert text as plain-text.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString header_text = 10;</code>
     */
    public Builder mergeHeaderText(com.google.transit.realtime.TranslatedString value) {
      if (headerTextBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0) &&
          headerText_ != null &&
          headerText_ != com.google.transit.realtime.TranslatedString.getDefaultInstance()) {
          getHeaderTextBuilder().mergeFrom(value);
        } else {
          headerText_ = value;
        }
      } else {
        headerTextBuilder_.mergeFrom(value);
      }
      if (headerText_ != null) {
        bitField0_ |= 0x00000020;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Alert header. Contains a short summary of the alert text as plain-text.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString header_text = 10;</code>
     */
    public Builder clearHeaderText() {
      bitField0_ = (bitField0_ & ~0x00000020);
      headerText_ = null;
      if (headerTextBuilder_ != null) {
        headerTextBuilder_.dispose();
        headerTextBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Alert header. Contains a short summary of the alert text as plain-text.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString header_text = 10;</code>
     */
    public com.google.transit.realtime.TranslatedString.Builder getHeaderTextBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getHeaderTextFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Alert header. Contains a short summary of the alert text as plain-text.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString header_text = 10;</code>
     */
    public com.google.transit.realtime.TranslatedStringOrBuilder getHeaderTextOrBuilder() {
      if (headerTextBuilder_ != null) {
        return headerTextBuilder_.getMessageOrBuilder();
      } else {
        return headerText_ == null ?
            com.google.transit.realtime.TranslatedString.getDefaultInstance() : headerText_;
      }
    }
    /**
     * <pre>
     * Alert header. Contains a short summary of the alert text as plain-text.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString header_text = 10;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.transit.realtime.TranslatedString, com.google.transit.realtime.TranslatedString.Builder, com.google.transit.realtime.TranslatedStringOrBuilder> 
        getHeaderTextFieldBuilder() {
      if (headerTextBuilder_ == null) {
        headerTextBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.transit.realtime.TranslatedString, com.google.transit.realtime.TranslatedString.Builder, com.google.transit.realtime.TranslatedStringOrBuilder>(
                getHeaderText(),
                getParentForChildren(),
                isClean());
        headerText_ = null;
      }
      return headerTextBuilder_;
    }

    private com.google.transit.realtime.TranslatedString descriptionText_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.transit.realtime.TranslatedString, com.google.transit.realtime.TranslatedString.Builder, com.google.transit.realtime.TranslatedStringOrBuilder> descriptionTextBuilder_;
    /**
     * <pre>
     * Full description for the alert as plain-text. The information in the
     * description should add to the information of the header.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString description_text = 11;</code>
     * @return Whether the descriptionText field is set.
     */
    public boolean hasDescriptionText() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * Full description for the alert as plain-text. The information in the
     * description should add to the information of the header.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString description_text = 11;</code>
     * @return The descriptionText.
     */
    public com.google.transit.realtime.TranslatedString getDescriptionText() {
      if (descriptionTextBuilder_ == null) {
        return descriptionText_ == null ? com.google.transit.realtime.TranslatedString.getDefaultInstance() : descriptionText_;
      } else {
        return descriptionTextBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Full description for the alert as plain-text. The information in the
     * description should add to the information of the header.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString description_text = 11;</code>
     */
    public Builder setDescriptionText(com.google.transit.realtime.TranslatedString value) {
      if (descriptionTextBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        descriptionText_ = value;
      } else {
        descriptionTextBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Full description for the alert as plain-text. The information in the
     * description should add to the information of the header.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString description_text = 11;</code>
     */
    public Builder setDescriptionText(
        com.google.transit.realtime.TranslatedString.Builder builderForValue) {
      if (descriptionTextBuilder_ == null) {
        descriptionText_ = builderForValue.build();
      } else {
        descriptionTextBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Full description for the alert as plain-text. The information in the
     * description should add to the information of the header.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString description_text = 11;</code>
     */
    public Builder mergeDescriptionText(com.google.transit.realtime.TranslatedString value) {
      if (descriptionTextBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0) &&
          descriptionText_ != null &&
          descriptionText_ != com.google.transit.realtime.TranslatedString.getDefaultInstance()) {
          getDescriptionTextBuilder().mergeFrom(value);
        } else {
          descriptionText_ = value;
        }
      } else {
        descriptionTextBuilder_.mergeFrom(value);
      }
      if (descriptionText_ != null) {
        bitField0_ |= 0x00000040;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Full description for the alert as plain-text. The information in the
     * description should add to the information of the header.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString description_text = 11;</code>
     */
    public Builder clearDescriptionText() {
      bitField0_ = (bitField0_ & ~0x00000040);
      descriptionText_ = null;
      if (descriptionTextBuilder_ != null) {
        descriptionTextBuilder_.dispose();
        descriptionTextBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Full description for the alert as plain-text. The information in the
     * description should add to the information of the header.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString description_text = 11;</code>
     */
    public com.google.transit.realtime.TranslatedString.Builder getDescriptionTextBuilder() {
      bitField0_ |= 0x00000040;
      onChanged();
      return getDescriptionTextFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Full description for the alert as plain-text. The information in the
     * description should add to the information of the header.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString description_text = 11;</code>
     */
    public com.google.transit.realtime.TranslatedStringOrBuilder getDescriptionTextOrBuilder() {
      if (descriptionTextBuilder_ != null) {
        return descriptionTextBuilder_.getMessageOrBuilder();
      } else {
        return descriptionText_ == null ?
            com.google.transit.realtime.TranslatedString.getDefaultInstance() : descriptionText_;
      }
    }
    /**
     * <pre>
     * Full description for the alert as plain-text. The information in the
     * description should add to the information of the header.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString description_text = 11;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.transit.realtime.TranslatedString, com.google.transit.realtime.TranslatedString.Builder, com.google.transit.realtime.TranslatedStringOrBuilder> 
        getDescriptionTextFieldBuilder() {
      if (descriptionTextBuilder_ == null) {
        descriptionTextBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.transit.realtime.TranslatedString, com.google.transit.realtime.TranslatedString.Builder, com.google.transit.realtime.TranslatedStringOrBuilder>(
                getDescriptionText(),
                getParentForChildren(),
                isClean());
        descriptionText_ = null;
      }
      return descriptionTextBuilder_;
    }

    private com.google.transit.realtime.TranslatedString ttsHeaderText_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.transit.realtime.TranslatedString, com.google.transit.realtime.TranslatedString.Builder, com.google.transit.realtime.TranslatedStringOrBuilder> ttsHeaderTextBuilder_;
    /**
     * <pre>
     * Text for alert header to be used in text-to-speech implementations. This field is the text-to-speech version of header_text.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString tts_header_text = 12;</code>
     * @return Whether the ttsHeaderText field is set.
     */
    public boolean hasTtsHeaderText() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * Text for alert header to be used in text-to-speech implementations. This field is the text-to-speech version of header_text.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString tts_header_text = 12;</code>
     * @return The ttsHeaderText.
     */
    public com.google.transit.realtime.TranslatedString getTtsHeaderText() {
      if (ttsHeaderTextBuilder_ == null) {
        return ttsHeaderText_ == null ? com.google.transit.realtime.TranslatedString.getDefaultInstance() : ttsHeaderText_;
      } else {
        return ttsHeaderTextBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Text for alert header to be used in text-to-speech implementations. This field is the text-to-speech version of header_text.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString tts_header_text = 12;</code>
     */
    public Builder setTtsHeaderText(com.google.transit.realtime.TranslatedString value) {
      if (ttsHeaderTextBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ttsHeaderText_ = value;
      } else {
        ttsHeaderTextBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Text for alert header to be used in text-to-speech implementations. This field is the text-to-speech version of header_text.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString tts_header_text = 12;</code>
     */
    public Builder setTtsHeaderText(
        com.google.transit.realtime.TranslatedString.Builder builderForValue) {
      if (ttsHeaderTextBuilder_ == null) {
        ttsHeaderText_ = builderForValue.build();
      } else {
        ttsHeaderTextBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Text for alert header to be used in text-to-speech implementations. This field is the text-to-speech version of header_text.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString tts_header_text = 12;</code>
     */
    public Builder mergeTtsHeaderText(com.google.transit.realtime.TranslatedString value) {
      if (ttsHeaderTextBuilder_ == null) {
        if (((bitField0_ & 0x00000080) != 0) &&
          ttsHeaderText_ != null &&
          ttsHeaderText_ != com.google.transit.realtime.TranslatedString.getDefaultInstance()) {
          getTtsHeaderTextBuilder().mergeFrom(value);
        } else {
          ttsHeaderText_ = value;
        }
      } else {
        ttsHeaderTextBuilder_.mergeFrom(value);
      }
      if (ttsHeaderText_ != null) {
        bitField0_ |= 0x00000080;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Text for alert header to be used in text-to-speech implementations. This field is the text-to-speech version of header_text.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString tts_header_text = 12;</code>
     */
    public Builder clearTtsHeaderText() {
      bitField0_ = (bitField0_ & ~0x00000080);
      ttsHeaderText_ = null;
      if (ttsHeaderTextBuilder_ != null) {
        ttsHeaderTextBuilder_.dispose();
        ttsHeaderTextBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Text for alert header to be used in text-to-speech implementations. This field is the text-to-speech version of header_text.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString tts_header_text = 12;</code>
     */
    public com.google.transit.realtime.TranslatedString.Builder getTtsHeaderTextBuilder() {
      bitField0_ |= 0x00000080;
      onChanged();
      return getTtsHeaderTextFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Text for alert header to be used in text-to-speech implementations. This field is the text-to-speech version of header_text.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString tts_header_text = 12;</code>
     */
    public com.google.transit.realtime.TranslatedStringOrBuilder getTtsHeaderTextOrBuilder() {
      if (ttsHeaderTextBuilder_ != null) {
        return ttsHeaderTextBuilder_.getMessageOrBuilder();
      } else {
        return ttsHeaderText_ == null ?
            com.google.transit.realtime.TranslatedString.getDefaultInstance() : ttsHeaderText_;
      }
    }
    /**
     * <pre>
     * Text for alert header to be used in text-to-speech implementations. This field is the text-to-speech version of header_text.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString tts_header_text = 12;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.transit.realtime.TranslatedString, com.google.transit.realtime.TranslatedString.Builder, com.google.transit.realtime.TranslatedStringOrBuilder> 
        getTtsHeaderTextFieldBuilder() {
      if (ttsHeaderTextBuilder_ == null) {
        ttsHeaderTextBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.transit.realtime.TranslatedString, com.google.transit.realtime.TranslatedString.Builder, com.google.transit.realtime.TranslatedStringOrBuilder>(
                getTtsHeaderText(),
                getParentForChildren(),
                isClean());
        ttsHeaderText_ = null;
      }
      return ttsHeaderTextBuilder_;
    }

    private com.google.transit.realtime.TranslatedString ttsDescriptionText_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.transit.realtime.TranslatedString, com.google.transit.realtime.TranslatedString.Builder, com.google.transit.realtime.TranslatedStringOrBuilder> ttsDescriptionTextBuilder_;
    /**
     * <pre>
     * Text for full description for the alert to be used in text-to-speech implementations. This field is the text-to-speech version of description_text.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString tts_description_text = 13;</code>
     * @return Whether the ttsDescriptionText field is set.
     */
    public boolean hasTtsDescriptionText() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * Text for full description for the alert to be used in text-to-speech implementations. This field is the text-to-speech version of description_text.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString tts_description_text = 13;</code>
     * @return The ttsDescriptionText.
     */
    public com.google.transit.realtime.TranslatedString getTtsDescriptionText() {
      if (ttsDescriptionTextBuilder_ == null) {
        return ttsDescriptionText_ == null ? com.google.transit.realtime.TranslatedString.getDefaultInstance() : ttsDescriptionText_;
      } else {
        return ttsDescriptionTextBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Text for full description for the alert to be used in text-to-speech implementations. This field is the text-to-speech version of description_text.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString tts_description_text = 13;</code>
     */
    public Builder setTtsDescriptionText(com.google.transit.realtime.TranslatedString value) {
      if (ttsDescriptionTextBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ttsDescriptionText_ = value;
      } else {
        ttsDescriptionTextBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Text for full description for the alert to be used in text-to-speech implementations. This field is the text-to-speech version of description_text.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString tts_description_text = 13;</code>
     */
    public Builder setTtsDescriptionText(
        com.google.transit.realtime.TranslatedString.Builder builderForValue) {
      if (ttsDescriptionTextBuilder_ == null) {
        ttsDescriptionText_ = builderForValue.build();
      } else {
        ttsDescriptionTextBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Text for full description for the alert to be used in text-to-speech implementations. This field is the text-to-speech version of description_text.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString tts_description_text = 13;</code>
     */
    public Builder mergeTtsDescriptionText(com.google.transit.realtime.TranslatedString value) {
      if (ttsDescriptionTextBuilder_ == null) {
        if (((bitField0_ & 0x00000100) != 0) &&
          ttsDescriptionText_ != null &&
          ttsDescriptionText_ != com.google.transit.realtime.TranslatedString.getDefaultInstance()) {
          getTtsDescriptionTextBuilder().mergeFrom(value);
        } else {
          ttsDescriptionText_ = value;
        }
      } else {
        ttsDescriptionTextBuilder_.mergeFrom(value);
      }
      if (ttsDescriptionText_ != null) {
        bitField0_ |= 0x00000100;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Text for full description for the alert to be used in text-to-speech implementations. This field is the text-to-speech version of description_text.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString tts_description_text = 13;</code>
     */
    public Builder clearTtsDescriptionText() {
      bitField0_ = (bitField0_ & ~0x00000100);
      ttsDescriptionText_ = null;
      if (ttsDescriptionTextBuilder_ != null) {
        ttsDescriptionTextBuilder_.dispose();
        ttsDescriptionTextBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Text for full description for the alert to be used in text-to-speech implementations. This field is the text-to-speech version of description_text.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString tts_description_text = 13;</code>
     */
    public com.google.transit.realtime.TranslatedString.Builder getTtsDescriptionTextBuilder() {
      bitField0_ |= 0x00000100;
      onChanged();
      return getTtsDescriptionTextFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Text for full description for the alert to be used in text-to-speech implementations. This field is the text-to-speech version of description_text.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString tts_description_text = 13;</code>
     */
    public com.google.transit.realtime.TranslatedStringOrBuilder getTtsDescriptionTextOrBuilder() {
      if (ttsDescriptionTextBuilder_ != null) {
        return ttsDescriptionTextBuilder_.getMessageOrBuilder();
      } else {
        return ttsDescriptionText_ == null ?
            com.google.transit.realtime.TranslatedString.getDefaultInstance() : ttsDescriptionText_;
      }
    }
    /**
     * <pre>
     * Text for full description for the alert to be used in text-to-speech implementations. This field is the text-to-speech version of description_text.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString tts_description_text = 13;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.transit.realtime.TranslatedString, com.google.transit.realtime.TranslatedString.Builder, com.google.transit.realtime.TranslatedStringOrBuilder> 
        getTtsDescriptionTextFieldBuilder() {
      if (ttsDescriptionTextBuilder_ == null) {
        ttsDescriptionTextBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.transit.realtime.TranslatedString, com.google.transit.realtime.TranslatedString.Builder, com.google.transit.realtime.TranslatedStringOrBuilder>(
                getTtsDescriptionText(),
                getParentForChildren(),
                isClean());
        ttsDescriptionText_ = null;
      }
      return ttsDescriptionTextBuilder_;
    }

    private int severityLevel_ = 1;
    /**
     * <code>optional .transit_realtime.Alert.SeverityLevel severity_level = 14 [default = UNKNOWN_SEVERITY];</code>
     * @return Whether the severityLevel field is set.
     */
    @java.lang.Override public boolean hasSeverityLevel() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>optional .transit_realtime.Alert.SeverityLevel severity_level = 14 [default = UNKNOWN_SEVERITY];</code>
     * @return The severityLevel.
     */
    @java.lang.Override
    public com.google.transit.realtime.Alert.SeverityLevel getSeverityLevel() {
      com.google.transit.realtime.Alert.SeverityLevel result = com.google.transit.realtime.Alert.SeverityLevel.forNumber(severityLevel_);
      return result == null ? com.google.transit.realtime.Alert.SeverityLevel.UNKNOWN_SEVERITY : result;
    }
    /**
     * <code>optional .transit_realtime.Alert.SeverityLevel severity_level = 14 [default = UNKNOWN_SEVERITY];</code>
     * @param value The severityLevel to set.
     * @return This builder for chaining.
     */
    public Builder setSeverityLevel(com.google.transit.realtime.Alert.SeverityLevel value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000200;
      severityLevel_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>optional .transit_realtime.Alert.SeverityLevel severity_level = 14 [default = UNKNOWN_SEVERITY];</code>
     * @return This builder for chaining.
     */
    public Builder clearSeverityLevel() {
      bitField0_ = (bitField0_ & ~0x00000200);
      severityLevel_ = 1;
      onChanged();
      return this;
    }

    private com.google.transit.realtime.TranslatedImage image_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.transit.realtime.TranslatedImage, com.google.transit.realtime.TranslatedImage.Builder, com.google.transit.realtime.TranslatedImageOrBuilder> imageBuilder_;
    /**
     * <pre>
     * TranslatedImage to be displayed along the alert text. Used to explain visually the alert effect of a detour, station closure, etc. The image must enhance the understanding of the alert. Any essential information communicated within the image must also be contained in the alert text.
     * The following types of images are discouraged : image containing mainly text, marketing or branded images that add no additional information. 
     * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedImage image = 15;</code>
     * @return Whether the image field is set.
     */
    public boolean hasImage() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <pre>
     * TranslatedImage to be displayed along the alert text. Used to explain visually the alert effect of a detour, station closure, etc. The image must enhance the understanding of the alert. Any essential information communicated within the image must also be contained in the alert text.
     * The following types of images are discouraged : image containing mainly text, marketing or branded images that add no additional information. 
     * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedImage image = 15;</code>
     * @return The image.
     */
    public com.google.transit.realtime.TranslatedImage getImage() {
      if (imageBuilder_ == null) {
        return image_ == null ? com.google.transit.realtime.TranslatedImage.getDefaultInstance() : image_;
      } else {
        return imageBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * TranslatedImage to be displayed along the alert text. Used to explain visually the alert effect of a detour, station closure, etc. The image must enhance the understanding of the alert. Any essential information communicated within the image must also be contained in the alert text.
     * The following types of images are discouraged : image containing mainly text, marketing or branded images that add no additional information. 
     * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedImage image = 15;</code>
     */
    public Builder setImage(com.google.transit.realtime.TranslatedImage value) {
      if (imageBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        image_ = value;
      } else {
        imageBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * TranslatedImage to be displayed along the alert text. Used to explain visually the alert effect of a detour, station closure, etc. The image must enhance the understanding of the alert. Any essential information communicated within the image must also be contained in the alert text.
     * The following types of images are discouraged : image containing mainly text, marketing or branded images that add no additional information. 
     * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedImage image = 15;</code>
     */
    public Builder setImage(
        com.google.transit.realtime.TranslatedImage.Builder builderForValue) {
      if (imageBuilder_ == null) {
        image_ = builderForValue.build();
      } else {
        imageBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * TranslatedImage to be displayed along the alert text. Used to explain visually the alert effect of a detour, station closure, etc. The image must enhance the understanding of the alert. Any essential information communicated within the image must also be contained in the alert text.
     * The following types of images are discouraged : image containing mainly text, marketing or branded images that add no additional information. 
     * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedImage image = 15;</code>
     */
    public Builder mergeImage(com.google.transit.realtime.TranslatedImage value) {
      if (imageBuilder_ == null) {
        if (((bitField0_ & 0x00000400) != 0) &&
          image_ != null &&
          image_ != com.google.transit.realtime.TranslatedImage.getDefaultInstance()) {
          getImageBuilder().mergeFrom(value);
        } else {
          image_ = value;
        }
      } else {
        imageBuilder_.mergeFrom(value);
      }
      if (image_ != null) {
        bitField0_ |= 0x00000400;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * TranslatedImage to be displayed along the alert text. Used to explain visually the alert effect of a detour, station closure, etc. The image must enhance the understanding of the alert. Any essential information communicated within the image must also be contained in the alert text.
     * The following types of images are discouraged : image containing mainly text, marketing or branded images that add no additional information. 
     * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedImage image = 15;</code>
     */
    public Builder clearImage() {
      bitField0_ = (bitField0_ & ~0x00000400);
      image_ = null;
      if (imageBuilder_ != null) {
        imageBuilder_.dispose();
        imageBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * TranslatedImage to be displayed along the alert text. Used to explain visually the alert effect of a detour, station closure, etc. The image must enhance the understanding of the alert. Any essential information communicated within the image must also be contained in the alert text.
     * The following types of images are discouraged : image containing mainly text, marketing or branded images that add no additional information. 
     * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedImage image = 15;</code>
     */
    public com.google.transit.realtime.TranslatedImage.Builder getImageBuilder() {
      bitField0_ |= 0x00000400;
      onChanged();
      return getImageFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * TranslatedImage to be displayed along the alert text. Used to explain visually the alert effect of a detour, station closure, etc. The image must enhance the understanding of the alert. Any essential information communicated within the image must also be contained in the alert text.
     * The following types of images are discouraged : image containing mainly text, marketing or branded images that add no additional information. 
     * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedImage image = 15;</code>
     */
    public com.google.transit.realtime.TranslatedImageOrBuilder getImageOrBuilder() {
      if (imageBuilder_ != null) {
        return imageBuilder_.getMessageOrBuilder();
      } else {
        return image_ == null ?
            com.google.transit.realtime.TranslatedImage.getDefaultInstance() : image_;
      }
    }
    /**
     * <pre>
     * TranslatedImage to be displayed along the alert text. Used to explain visually the alert effect of a detour, station closure, etc. The image must enhance the understanding of the alert. Any essential information communicated within the image must also be contained in the alert text.
     * The following types of images are discouraged : image containing mainly text, marketing or branded images that add no additional information. 
     * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedImage image = 15;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.transit.realtime.TranslatedImage, com.google.transit.realtime.TranslatedImage.Builder, com.google.transit.realtime.TranslatedImageOrBuilder> 
        getImageFieldBuilder() {
      if (imageBuilder_ == null) {
        imageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.transit.realtime.TranslatedImage, com.google.transit.realtime.TranslatedImage.Builder, com.google.transit.realtime.TranslatedImageOrBuilder>(
                getImage(),
                getParentForChildren(),
                isClean());
        image_ = null;
      }
      return imageBuilder_;
    }

    private com.google.transit.realtime.TranslatedString imageAlternativeText_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.transit.realtime.TranslatedString, com.google.transit.realtime.TranslatedString.Builder, com.google.transit.realtime.TranslatedStringOrBuilder> imageAlternativeTextBuilder_;
    /**
     * <pre>
     * Text describing the appearance of the linked image in the `image` field (e.g., in case the image can't be displayed
     * or the user can't see the image for accessibility reasons). See the HTML spec for alt image text - https://html.spec.whatwg.org/#alt.
     * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString image_alternative_text = 16;</code>
     * @return Whether the imageAlternativeText field is set.
     */
    public boolean hasImageAlternativeText() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <pre>
     * Text describing the appearance of the linked image in the `image` field (e.g., in case the image can't be displayed
     * or the user can't see the image for accessibility reasons). See the HTML spec for alt image text - https://html.spec.whatwg.org/#alt.
     * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString image_alternative_text = 16;</code>
     * @return The imageAlternativeText.
     */
    public com.google.transit.realtime.TranslatedString getImageAlternativeText() {
      if (imageAlternativeTextBuilder_ == null) {
        return imageAlternativeText_ == null ? com.google.transit.realtime.TranslatedString.getDefaultInstance() : imageAlternativeText_;
      } else {
        return imageAlternativeTextBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Text describing the appearance of the linked image in the `image` field (e.g., in case the image can't be displayed
     * or the user can't see the image for accessibility reasons). See the HTML spec for alt image text - https://html.spec.whatwg.org/#alt.
     * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString image_alternative_text = 16;</code>
     */
    public Builder setImageAlternativeText(com.google.transit.realtime.TranslatedString value) {
      if (imageAlternativeTextBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        imageAlternativeText_ = value;
      } else {
        imageAlternativeTextBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Text describing the appearance of the linked image in the `image` field (e.g., in case the image can't be displayed
     * or the user can't see the image for accessibility reasons). See the HTML spec for alt image text - https://html.spec.whatwg.org/#alt.
     * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString image_alternative_text = 16;</code>
     */
    public Builder setImageAlternativeText(
        com.google.transit.realtime.TranslatedString.Builder builderForValue) {
      if (imageAlternativeTextBuilder_ == null) {
        imageAlternativeText_ = builderForValue.build();
      } else {
        imageAlternativeTextBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Text describing the appearance of the linked image in the `image` field (e.g., in case the image can't be displayed
     * or the user can't see the image for accessibility reasons). See the HTML spec for alt image text - https://html.spec.whatwg.org/#alt.
     * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString image_alternative_text = 16;</code>
     */
    public Builder mergeImageAlternativeText(com.google.transit.realtime.TranslatedString value) {
      if (imageAlternativeTextBuilder_ == null) {
        if (((bitField0_ & 0x00000800) != 0) &&
          imageAlternativeText_ != null &&
          imageAlternativeText_ != com.google.transit.realtime.TranslatedString.getDefaultInstance()) {
          getImageAlternativeTextBuilder().mergeFrom(value);
        } else {
          imageAlternativeText_ = value;
        }
      } else {
        imageAlternativeTextBuilder_.mergeFrom(value);
      }
      if (imageAlternativeText_ != null) {
        bitField0_ |= 0x00000800;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Text describing the appearance of the linked image in the `image` field (e.g., in case the image can't be displayed
     * or the user can't see the image for accessibility reasons). See the HTML spec for alt image text - https://html.spec.whatwg.org/#alt.
     * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString image_alternative_text = 16;</code>
     */
    public Builder clearImageAlternativeText() {
      bitField0_ = (bitField0_ & ~0x00000800);
      imageAlternativeText_ = null;
      if (imageAlternativeTextBuilder_ != null) {
        imageAlternativeTextBuilder_.dispose();
        imageAlternativeTextBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Text describing the appearance of the linked image in the `image` field (e.g., in case the image can't be displayed
     * or the user can't see the image for accessibility reasons). See the HTML spec for alt image text - https://html.spec.whatwg.org/#alt.
     * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString image_alternative_text = 16;</code>
     */
    public com.google.transit.realtime.TranslatedString.Builder getImageAlternativeTextBuilder() {
      bitField0_ |= 0x00000800;
      onChanged();
      return getImageAlternativeTextFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Text describing the appearance of the linked image in the `image` field (e.g., in case the image can't be displayed
     * or the user can't see the image for accessibility reasons). See the HTML spec for alt image text - https://html.spec.whatwg.org/#alt.
     * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString image_alternative_text = 16;</code>
     */
    public com.google.transit.realtime.TranslatedStringOrBuilder getImageAlternativeTextOrBuilder() {
      if (imageAlternativeTextBuilder_ != null) {
        return imageAlternativeTextBuilder_.getMessageOrBuilder();
      } else {
        return imageAlternativeText_ == null ?
            com.google.transit.realtime.TranslatedString.getDefaultInstance() : imageAlternativeText_;
      }
    }
    /**
     * <pre>
     * Text describing the appearance of the linked image in the `image` field (e.g., in case the image can't be displayed
     * or the user can't see the image for accessibility reasons). See the HTML spec for alt image text - https://html.spec.whatwg.org/#alt.
     * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString image_alternative_text = 16;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.transit.realtime.TranslatedString, com.google.transit.realtime.TranslatedString.Builder, com.google.transit.realtime.TranslatedStringOrBuilder> 
        getImageAlternativeTextFieldBuilder() {
      if (imageAlternativeTextBuilder_ == null) {
        imageAlternativeTextBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.transit.realtime.TranslatedString, com.google.transit.realtime.TranslatedString.Builder, com.google.transit.realtime.TranslatedStringOrBuilder>(
                getImageAlternativeText(),
                getParentForChildren(),
                isClean());
        imageAlternativeText_ = null;
      }
      return imageAlternativeTextBuilder_;
    }

    private com.google.transit.realtime.TranslatedString causeDetail_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.transit.realtime.TranslatedString, com.google.transit.realtime.TranslatedString.Builder, com.google.transit.realtime.TranslatedStringOrBuilder> causeDetailBuilder_;
    /**
     * <pre>
     * Description of the cause of the alert that allows for agency-specific language; more specific than the Cause. If cause_detail is included, then Cause must also be included.
     * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString cause_detail = 17;</code>
     * @return Whether the causeDetail field is set.
     */
    public boolean hasCauseDetail() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <pre>
     * Description of the cause of the alert that allows for agency-specific language; more specific than the Cause. If cause_detail is included, then Cause must also be included.
     * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString cause_detail = 17;</code>
     * @return The causeDetail.
     */
    public com.google.transit.realtime.TranslatedString getCauseDetail() {
      if (causeDetailBuilder_ == null) {
        return causeDetail_ == null ? com.google.transit.realtime.TranslatedString.getDefaultInstance() : causeDetail_;
      } else {
        return causeDetailBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Description of the cause of the alert that allows for agency-specific language; more specific than the Cause. If cause_detail is included, then Cause must also be included.
     * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString cause_detail = 17;</code>
     */
    public Builder setCauseDetail(com.google.transit.realtime.TranslatedString value) {
      if (causeDetailBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        causeDetail_ = value;
      } else {
        causeDetailBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Description of the cause of the alert that allows for agency-specific language; more specific than the Cause. If cause_detail is included, then Cause must also be included.
     * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString cause_detail = 17;</code>
     */
    public Builder setCauseDetail(
        com.google.transit.realtime.TranslatedString.Builder builderForValue) {
      if (causeDetailBuilder_ == null) {
        causeDetail_ = builderForValue.build();
      } else {
        causeDetailBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Description of the cause of the alert that allows for agency-specific language; more specific than the Cause. If cause_detail is included, then Cause must also be included.
     * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString cause_detail = 17;</code>
     */
    public Builder mergeCauseDetail(com.google.transit.realtime.TranslatedString value) {
      if (causeDetailBuilder_ == null) {
        if (((bitField0_ & 0x00001000) != 0) &&
          causeDetail_ != null &&
          causeDetail_ != com.google.transit.realtime.TranslatedString.getDefaultInstance()) {
          getCauseDetailBuilder().mergeFrom(value);
        } else {
          causeDetail_ = value;
        }
      } else {
        causeDetailBuilder_.mergeFrom(value);
      }
      if (causeDetail_ != null) {
        bitField0_ |= 0x00001000;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Description of the cause of the alert that allows for agency-specific language; more specific than the Cause. If cause_detail is included, then Cause must also be included.
     * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString cause_detail = 17;</code>
     */
    public Builder clearCauseDetail() {
      bitField0_ = (bitField0_ & ~0x00001000);
      causeDetail_ = null;
      if (causeDetailBuilder_ != null) {
        causeDetailBuilder_.dispose();
        causeDetailBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Description of the cause of the alert that allows for agency-specific language; more specific than the Cause. If cause_detail is included, then Cause must also be included.
     * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString cause_detail = 17;</code>
     */
    public com.google.transit.realtime.TranslatedString.Builder getCauseDetailBuilder() {
      bitField0_ |= 0x00001000;
      onChanged();
      return getCauseDetailFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Description of the cause of the alert that allows for agency-specific language; more specific than the Cause. If cause_detail is included, then Cause must also be included.
     * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString cause_detail = 17;</code>
     */
    public com.google.transit.realtime.TranslatedStringOrBuilder getCauseDetailOrBuilder() {
      if (causeDetailBuilder_ != null) {
        return causeDetailBuilder_.getMessageOrBuilder();
      } else {
        return causeDetail_ == null ?
            com.google.transit.realtime.TranslatedString.getDefaultInstance() : causeDetail_;
      }
    }
    /**
     * <pre>
     * Description of the cause of the alert that allows for agency-specific language; more specific than the Cause. If cause_detail is included, then Cause must also be included.
     * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString cause_detail = 17;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.transit.realtime.TranslatedString, com.google.transit.realtime.TranslatedString.Builder, com.google.transit.realtime.TranslatedStringOrBuilder> 
        getCauseDetailFieldBuilder() {
      if (causeDetailBuilder_ == null) {
        causeDetailBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.transit.realtime.TranslatedString, com.google.transit.realtime.TranslatedString.Builder, com.google.transit.realtime.TranslatedStringOrBuilder>(
                getCauseDetail(),
                getParentForChildren(),
                isClean());
        causeDetail_ = null;
      }
      return causeDetailBuilder_;
    }

    private com.google.transit.realtime.TranslatedString effectDetail_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.transit.realtime.TranslatedString, com.google.transit.realtime.TranslatedString.Builder, com.google.transit.realtime.TranslatedStringOrBuilder> effectDetailBuilder_;
    /**
     * <pre>
     * Description of the effect of the alert that allows for agency-specific language; more specific than the Effect. If effect_detail is included, then Effect must also be included.
     * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString effect_detail = 18;</code>
     * @return Whether the effectDetail field is set.
     */
    public boolean hasEffectDetail() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <pre>
     * Description of the effect of the alert that allows for agency-specific language; more specific than the Effect. If effect_detail is included, then Effect must also be included.
     * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString effect_detail = 18;</code>
     * @return The effectDetail.
     */
    public com.google.transit.realtime.TranslatedString getEffectDetail() {
      if (effectDetailBuilder_ == null) {
        return effectDetail_ == null ? com.google.transit.realtime.TranslatedString.getDefaultInstance() : effectDetail_;
      } else {
        return effectDetailBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Description of the effect of the alert that allows for agency-specific language; more specific than the Effect. If effect_detail is included, then Effect must also be included.
     * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString effect_detail = 18;</code>
     */
    public Builder setEffectDetail(com.google.transit.realtime.TranslatedString value) {
      if (effectDetailBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        effectDetail_ = value;
      } else {
        effectDetailBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00002000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Description of the effect of the alert that allows for agency-specific language; more specific than the Effect. If effect_detail is included, then Effect must also be included.
     * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString effect_detail = 18;</code>
     */
    public Builder setEffectDetail(
        com.google.transit.realtime.TranslatedString.Builder builderForValue) {
      if (effectDetailBuilder_ == null) {
        effectDetail_ = builderForValue.build();
      } else {
        effectDetailBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00002000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Description of the effect of the alert that allows for agency-specific language; more specific than the Effect. If effect_detail is included, then Effect must also be included.
     * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString effect_detail = 18;</code>
     */
    public Builder mergeEffectDetail(com.google.transit.realtime.TranslatedString value) {
      if (effectDetailBuilder_ == null) {
        if (((bitField0_ & 0x00002000) != 0) &&
          effectDetail_ != null &&
          effectDetail_ != com.google.transit.realtime.TranslatedString.getDefaultInstance()) {
          getEffectDetailBuilder().mergeFrom(value);
        } else {
          effectDetail_ = value;
        }
      } else {
        effectDetailBuilder_.mergeFrom(value);
      }
      if (effectDetail_ != null) {
        bitField0_ |= 0x00002000;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Description of the effect of the alert that allows for agency-specific language; more specific than the Effect. If effect_detail is included, then Effect must also be included.
     * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString effect_detail = 18;</code>
     */
    public Builder clearEffectDetail() {
      bitField0_ = (bitField0_ & ~0x00002000);
      effectDetail_ = null;
      if (effectDetailBuilder_ != null) {
        effectDetailBuilder_.dispose();
        effectDetailBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Description of the effect of the alert that allows for agency-specific language; more specific than the Effect. If effect_detail is included, then Effect must also be included.
     * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString effect_detail = 18;</code>
     */
    public com.google.transit.realtime.TranslatedString.Builder getEffectDetailBuilder() {
      bitField0_ |= 0x00002000;
      onChanged();
      return getEffectDetailFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Description of the effect of the alert that allows for agency-specific language; more specific than the Effect. If effect_detail is included, then Effect must also be included.
     * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString effect_detail = 18;</code>
     */
    public com.google.transit.realtime.TranslatedStringOrBuilder getEffectDetailOrBuilder() {
      if (effectDetailBuilder_ != null) {
        return effectDetailBuilder_.getMessageOrBuilder();
      } else {
        return effectDetail_ == null ?
            com.google.transit.realtime.TranslatedString.getDefaultInstance() : effectDetail_;
      }
    }
    /**
     * <pre>
     * Description of the effect of the alert that allows for agency-specific language; more specific than the Effect. If effect_detail is included, then Effect must also be included.
     * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
     * </pre>
     *
     * <code>optional .transit_realtime.TranslatedString effect_detail = 18;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.transit.realtime.TranslatedString, com.google.transit.realtime.TranslatedString.Builder, com.google.transit.realtime.TranslatedStringOrBuilder> 
        getEffectDetailFieldBuilder() {
      if (effectDetailBuilder_ == null) {
        effectDetailBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.transit.realtime.TranslatedString, com.google.transit.realtime.TranslatedString.Builder, com.google.transit.realtime.TranslatedStringOrBuilder>(
                getEffectDetail(),
                getParentForChildren(),
                isClean());
        effectDetail_ = null;
      }
      return effectDetailBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:transit_realtime.Alert)
  }

  // @@protoc_insertion_point(class_scope:transit_realtime.Alert)
  private static final com.google.transit.realtime.Alert DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.transit.realtime.Alert();
  }

  public static com.google.transit.realtime.Alert getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<Alert>
      PARSER = new com.google.protobuf.AbstractParser<Alert>() {
    @java.lang.Override
    public Alert parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Alert> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Alert> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.transit.realtime.Alert getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

