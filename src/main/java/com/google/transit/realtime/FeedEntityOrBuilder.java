// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: main/resources/gtfs-realtime.proto

package com.google.transit.realtime;

public interface FeedEntityOrBuilder extends
    // @@protoc_insertion_point(interface_extends:transit_realtime.FeedEntity)
    com.google.protobuf.GeneratedMessageV3.
        ExtendableMessageOrBuilder<FeedEntity> {

  /**
   * <pre>
   * The ids are used only to provide incrementality support. The id should be
   * unique within a FeedMessage. Consequent FeedMessages may contain
   * FeedEntities with the same id. In case of a DIFFERENTIAL update the new
   * FeedEntity with some id will replace the old FeedEntity with the same id
   * (or delete it - see is_deleted below).
   * The actual GTFS entities (e.g. stations, routes, trips) referenced by the
   * feed must be specified by explicit selectors (see EntitySelector below for
   * more info).
   * </pre>
   *
   * <code>required string id = 1;</code>
   * @return Whether the id field is set.
   */
  boolean hasId();
  /**
   * <pre>
   * The ids are used only to provide incrementality support. The id should be
   * unique within a FeedMessage. Consequent FeedMessages may contain
   * FeedEntities with the same id. In case of a DIFFERENTIAL update the new
   * FeedEntity with some id will replace the old FeedEntity with the same id
   * (or delete it - see is_deleted below).
   * The actual GTFS entities (e.g. stations, routes, trips) referenced by the
   * feed must be specified by explicit selectors (see EntitySelector below for
   * more info).
   * </pre>
   *
   * <code>required string id = 1;</code>
   * @return The id.
   */
  java.lang.String getId();
  /**
   * <pre>
   * The ids are used only to provide incrementality support. The id should be
   * unique within a FeedMessage. Consequent FeedMessages may contain
   * FeedEntities with the same id. In case of a DIFFERENTIAL update the new
   * FeedEntity with some id will replace the old FeedEntity with the same id
   * (or delete it - see is_deleted below).
   * The actual GTFS entities (e.g. stations, routes, trips) referenced by the
   * feed must be specified by explicit selectors (see EntitySelector below for
   * more info).
   * </pre>
   *
   * <code>required string id = 1;</code>
   * @return The bytes for id.
   */
  com.google.protobuf.ByteString
      getIdBytes();

  /**
   * <pre>
   * Whether this entity is to be deleted. Relevant only for incremental
   * fetches.
   * </pre>
   *
   * <code>optional bool is_deleted = 2 [default = false];</code>
   * @return Whether the isDeleted field is set.
   */
  boolean hasIsDeleted();
  /**
   * <pre>
   * Whether this entity is to be deleted. Relevant only for incremental
   * fetches.
   * </pre>
   *
   * <code>optional bool is_deleted = 2 [default = false];</code>
   * @return The isDeleted.
   */
  boolean getIsDeleted();

  /**
   * <pre>
   * Data about the entity itself. Exactly one of the following fields must be
   * present (unless the entity is being deleted).
   * </pre>
   *
   * <code>optional .transit_realtime.TripUpdate trip_update = 3;</code>
   * @return Whether the tripUpdate field is set.
   */
  boolean hasTripUpdate();
  /**
   * <pre>
   * Data about the entity itself. Exactly one of the following fields must be
   * present (unless the entity is being deleted).
   * </pre>
   *
   * <code>optional .transit_realtime.TripUpdate trip_update = 3;</code>
   * @return The tripUpdate.
   */
  com.google.transit.realtime.TripUpdate getTripUpdate();
  /**
   * <pre>
   * Data about the entity itself. Exactly one of the following fields must be
   * present (unless the entity is being deleted).
   * </pre>
   *
   * <code>optional .transit_realtime.TripUpdate trip_update = 3;</code>
   */
  com.google.transit.realtime.TripUpdateOrBuilder getTripUpdateOrBuilder();

  /**
   * <code>optional .transit_realtime.VehiclePosition vehicle = 4;</code>
   * @return Whether the vehicle field is set.
   */
  boolean hasVehicle();
  /**
   * <code>optional .transit_realtime.VehiclePosition vehicle = 4;</code>
   * @return The vehicle.
   */
  com.google.transit.realtime.VehiclePosition getVehicle();
  /**
   * <code>optional .transit_realtime.VehiclePosition vehicle = 4;</code>
   */
  com.google.transit.realtime.VehiclePositionOrBuilder getVehicleOrBuilder();

  /**
   * <code>optional .transit_realtime.Alert alert = 5;</code>
   * @return Whether the alert field is set.
   */
  boolean hasAlert();
  /**
   * <code>optional .transit_realtime.Alert alert = 5;</code>
   * @return The alert.
   */
  com.google.transit.realtime.Alert getAlert();
  /**
   * <code>optional .transit_realtime.Alert alert = 5;</code>
   */
  com.google.transit.realtime.AlertOrBuilder getAlertOrBuilder();

  /**
   * <pre>
   * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
   * </pre>
   *
   * <code>optional .transit_realtime.Shape shape = 6;</code>
   * @return Whether the shape field is set.
   */
  boolean hasShape();
  /**
   * <pre>
   * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
   * </pre>
   *
   * <code>optional .transit_realtime.Shape shape = 6;</code>
   * @return The shape.
   */
  com.google.transit.realtime.Shape getShape();
  /**
   * <pre>
   * NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.
   * </pre>
   *
   * <code>optional .transit_realtime.Shape shape = 6;</code>
   */
  com.google.transit.realtime.ShapeOrBuilder getShapeOrBuilder();
}
