// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: main/resources/gtfs-realtime.proto

package com.google.transit.realtime;

/**
 * <pre>
 * A position.
 * </pre>
 *
 * Protobuf type {@code transit_realtime.Position}
 */
public final class Position extends
    com.google.protobuf.GeneratedMessageV3.ExtendableMessage<
      Position> implements
    // @@protoc_insertion_point(message_implements:transit_realtime.Position)
    PositionOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Position.newBuilder() to construct.
  private Position(com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<com.google.transit.realtime.Position, ?> builder) {
    super(builder);
  }
  private Position() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Position();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.transit.realtime.GtfsRealtime.internal_static_transit_realtime_Position_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.transit.realtime.GtfsRealtime.internal_static_transit_realtime_Position_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.transit.realtime.Position.class, com.google.transit.realtime.Position.Builder.class);
  }

  private int bitField0_;
  public static final int LATITUDE_FIELD_NUMBER = 1;
  private float latitude_ = 0F;
  /**
   * <pre>
   * Degrees North, in the WGS-84 coordinate system.
   * </pre>
   *
   * <code>required float latitude = 1;</code>
   * @return Whether the latitude field is set.
   */
  @java.lang.Override
  public boolean hasLatitude() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Degrees North, in the WGS-84 coordinate system.
   * </pre>
   *
   * <code>required float latitude = 1;</code>
   * @return The latitude.
   */
  @java.lang.Override
  public float getLatitude() {
    return latitude_;
  }

  public static final int LONGITUDE_FIELD_NUMBER = 2;
  private float longitude_ = 0F;
  /**
   * <pre>
   * Degrees East, in the WGS-84 coordinate system.
   * </pre>
   *
   * <code>required float longitude = 2;</code>
   * @return Whether the longitude field is set.
   */
  @java.lang.Override
  public boolean hasLongitude() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Degrees East, in the WGS-84 coordinate system.
   * </pre>
   *
   * <code>required float longitude = 2;</code>
   * @return The longitude.
   */
  @java.lang.Override
  public float getLongitude() {
    return longitude_;
  }

  public static final int BEARING_FIELD_NUMBER = 3;
  private float bearing_ = 0F;
  /**
   * <pre>
   * Bearing, in degrees, clockwise from North, i.e., 0 is North and 90 is East.
   * This can be the compass bearing, or the direction towards the next stop
   * or intermediate location.
   * This should not be direction deduced from the sequence of previous
   * positions, which can be computed from previous data.
   * </pre>
   *
   * <code>optional float bearing = 3;</code>
   * @return Whether the bearing field is set.
   */
  @java.lang.Override
  public boolean hasBearing() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Bearing, in degrees, clockwise from North, i.e., 0 is North and 90 is East.
   * This can be the compass bearing, or the direction towards the next stop
   * or intermediate location.
   * This should not be direction deduced from the sequence of previous
   * positions, which can be computed from previous data.
   * </pre>
   *
   * <code>optional float bearing = 3;</code>
   * @return The bearing.
   */
  @java.lang.Override
  public float getBearing() {
    return bearing_;
  }

  public static final int ODOMETER_FIELD_NUMBER = 4;
  private double odometer_ = 0D;
  /**
   * <pre>
   * Odometer value, in meters.
   * </pre>
   *
   * <code>optional double odometer = 4;</code>
   * @return Whether the odometer field is set.
   */
  @java.lang.Override
  public boolean hasOdometer() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * Odometer value, in meters.
   * </pre>
   *
   * <code>optional double odometer = 4;</code>
   * @return The odometer.
   */
  @java.lang.Override
  public double getOdometer() {
    return odometer_;
  }

  public static final int SPEED_FIELD_NUMBER = 5;
  private float speed_ = 0F;
  /**
   * <pre>
   * Momentary speed measured by the vehicle, in meters per second.
   * </pre>
   *
   * <code>optional float speed = 5;</code>
   * @return Whether the speed field is set.
   */
  @java.lang.Override
  public boolean hasSpeed() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * Momentary speed measured by the vehicle, in meters per second.
   * </pre>
   *
   * <code>optional float speed = 5;</code>
   * @return The speed.
   */
  @java.lang.Override
  public float getSpeed() {
    return speed_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasLatitude()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasLongitude()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!extensionsAreInitialized()) {
      memoizedIsInitialized = 0;
      return false;
    }
    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    com.google.protobuf.GeneratedMessageV3
      .ExtendableMessage<com.google.transit.realtime.Position>.ExtensionWriter
        extensionWriter = newExtensionWriter();
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeFloat(1, latitude_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeFloat(2, longitude_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeFloat(3, bearing_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeDouble(4, odometer_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeFloat(5, speed_);
    }
    extensionWriter.writeUntil(10000, output);
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(1, latitude_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(2, longitude_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(3, bearing_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(4, odometer_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(5, speed_);
    }
    size += extensionsSerializedSize();
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.transit.realtime.Position)) {
      return super.equals(obj);
    }
    com.google.transit.realtime.Position other = (com.google.transit.realtime.Position) obj;

    if (hasLatitude() != other.hasLatitude()) return false;
    if (hasLatitude()) {
      if (java.lang.Float.floatToIntBits(getLatitude())
          != java.lang.Float.floatToIntBits(
              other.getLatitude())) return false;
    }
    if (hasLongitude() != other.hasLongitude()) return false;
    if (hasLongitude()) {
      if (java.lang.Float.floatToIntBits(getLongitude())
          != java.lang.Float.floatToIntBits(
              other.getLongitude())) return false;
    }
    if (hasBearing() != other.hasBearing()) return false;
    if (hasBearing()) {
      if (java.lang.Float.floatToIntBits(getBearing())
          != java.lang.Float.floatToIntBits(
              other.getBearing())) return false;
    }
    if (hasOdometer() != other.hasOdometer()) return false;
    if (hasOdometer()) {
      if (java.lang.Double.doubleToLongBits(getOdometer())
          != java.lang.Double.doubleToLongBits(
              other.getOdometer())) return false;
    }
    if (hasSpeed() != other.hasSpeed()) return false;
    if (hasSpeed()) {
      if (java.lang.Float.floatToIntBits(getSpeed())
          != java.lang.Float.floatToIntBits(
              other.getSpeed())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    if (!getExtensionFields().equals(other.getExtensionFields()))
      return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasLatitude()) {
      hash = (37 * hash) + LATITUDE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getLatitude());
    }
    if (hasLongitude()) {
      hash = (37 * hash) + LONGITUDE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getLongitude());
    }
    if (hasBearing()) {
      hash = (37 * hash) + BEARING_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getBearing());
    }
    if (hasOdometer()) {
      hash = (37 * hash) + ODOMETER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getOdometer()));
    }
    if (hasSpeed()) {
      hash = (37 * hash) + SPEED_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getSpeed());
    }
    hash = hashFields(hash, getExtensionFields());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.transit.realtime.Position parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.transit.realtime.Position parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.transit.realtime.Position parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.transit.realtime.Position parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.transit.realtime.Position parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.transit.realtime.Position parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.transit.realtime.Position parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.transit.realtime.Position parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.google.transit.realtime.Position parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.transit.realtime.Position parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.transit.realtime.Position parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.transit.realtime.Position parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.transit.realtime.Position prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A position.
   * </pre>
   *
   * Protobuf type {@code transit_realtime.Position}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<
        com.google.transit.realtime.Position, Builder> implements
      // @@protoc_insertion_point(builder_implements:transit_realtime.Position)
      com.google.transit.realtime.PositionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.transit.realtime.GtfsRealtime.internal_static_transit_realtime_Position_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.transit.realtime.GtfsRealtime.internal_static_transit_realtime_Position_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.transit.realtime.Position.class, com.google.transit.realtime.Position.Builder.class);
    }

    // Construct using com.google.transit.realtime.Position.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      latitude_ = 0F;
      longitude_ = 0F;
      bearing_ = 0F;
      odometer_ = 0D;
      speed_ = 0F;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.transit.realtime.GtfsRealtime.internal_static_transit_realtime_Position_descriptor;
    }

    @java.lang.Override
    public com.google.transit.realtime.Position getDefaultInstanceForType() {
      return com.google.transit.realtime.Position.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.transit.realtime.Position build() {
      com.google.transit.realtime.Position result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.transit.realtime.Position buildPartial() {
      com.google.transit.realtime.Position result = new com.google.transit.realtime.Position(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.transit.realtime.Position result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.latitude_ = latitude_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.longitude_ = longitude_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.bearing_ = bearing_;
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.odometer_ = odometer_;
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.speed_ = speed_;
        to_bitField0_ |= 0x00000010;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public <Type> Builder setExtension(
        com.google.protobuf.GeneratedMessage.GeneratedExtension<
            com.google.transit.realtime.Position, Type> extension,
        Type value) {
      return super.setExtension(extension, value);
    }
    @java.lang.Override
    public <Type> Builder setExtension(
        com.google.protobuf.GeneratedMessage.GeneratedExtension<
            com.google.transit.realtime.Position, java.util.List<Type>> extension,
        int index, Type value) {
      return super.setExtension(extension, index, value);
    }
    @java.lang.Override
    public <Type> Builder addExtension(
        com.google.protobuf.GeneratedMessage.GeneratedExtension<
            com.google.transit.realtime.Position, java.util.List<Type>> extension,
        Type value) {
      return super.addExtension(extension, value);
    }
    @java.lang.Override
    public <T> Builder clearExtension(
        com.google.protobuf.GeneratedMessage.GeneratedExtension<
            com.google.transit.realtime.Position, T> extension) {
      return super.clearExtension(extension);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.transit.realtime.Position) {
        return mergeFrom((com.google.transit.realtime.Position)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.transit.realtime.Position other) {
      if (other == com.google.transit.realtime.Position.getDefaultInstance()) return this;
      if (other.hasLatitude()) {
        setLatitude(other.getLatitude());
      }
      if (other.hasLongitude()) {
        setLongitude(other.getLongitude());
      }
      if (other.hasBearing()) {
        setBearing(other.getBearing());
      }
      if (other.hasOdometer()) {
        setOdometer(other.getOdometer());
      }
      if (other.hasSpeed()) {
        setSpeed(other.getSpeed());
      }
      this.mergeExtensionFields(other);
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      if (!hasLatitude()) {
        return false;
      }
      if (!hasLongitude()) {
        return false;
      }
      if (!extensionsAreInitialized()) {
        return false;
      }
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              latitude_ = input.readFloat();
              bitField0_ |= 0x00000001;
              break;
            } // case 13
            case 21: {
              longitude_ = input.readFloat();
              bitField0_ |= 0x00000002;
              break;
            } // case 21
            case 29: {
              bearing_ = input.readFloat();
              bitField0_ |= 0x00000004;
              break;
            } // case 29
            case 33: {
              odometer_ = input.readDouble();
              bitField0_ |= 0x00000008;
              break;
            } // case 33
            case 45: {
              speed_ = input.readFloat();
              bitField0_ |= 0x00000010;
              break;
            } // case 45
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private float latitude_ ;
    /**
     * <pre>
     * Degrees North, in the WGS-84 coordinate system.
     * </pre>
     *
     * <code>required float latitude = 1;</code>
     * @return Whether the latitude field is set.
     */
    @java.lang.Override
    public boolean hasLatitude() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Degrees North, in the WGS-84 coordinate system.
     * </pre>
     *
     * <code>required float latitude = 1;</code>
     * @return The latitude.
     */
    @java.lang.Override
    public float getLatitude() {
      return latitude_;
    }
    /**
     * <pre>
     * Degrees North, in the WGS-84 coordinate system.
     * </pre>
     *
     * <code>required float latitude = 1;</code>
     * @param value The latitude to set.
     * @return This builder for chaining.
     */
    public Builder setLatitude(float value) {

      latitude_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Degrees North, in the WGS-84 coordinate system.
     * </pre>
     *
     * <code>required float latitude = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearLatitude() {
      bitField0_ = (bitField0_ & ~0x00000001);
      latitude_ = 0F;
      onChanged();
      return this;
    }

    private float longitude_ ;
    /**
     * <pre>
     * Degrees East, in the WGS-84 coordinate system.
     * </pre>
     *
     * <code>required float longitude = 2;</code>
     * @return Whether the longitude field is set.
     */
    @java.lang.Override
    public boolean hasLongitude() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Degrees East, in the WGS-84 coordinate system.
     * </pre>
     *
     * <code>required float longitude = 2;</code>
     * @return The longitude.
     */
    @java.lang.Override
    public float getLongitude() {
      return longitude_;
    }
    /**
     * <pre>
     * Degrees East, in the WGS-84 coordinate system.
     * </pre>
     *
     * <code>required float longitude = 2;</code>
     * @param value The longitude to set.
     * @return This builder for chaining.
     */
    public Builder setLongitude(float value) {

      longitude_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Degrees East, in the WGS-84 coordinate system.
     * </pre>
     *
     * <code>required float longitude = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearLongitude() {
      bitField0_ = (bitField0_ & ~0x00000002);
      longitude_ = 0F;
      onChanged();
      return this;
    }

    private float bearing_ ;
    /**
     * <pre>
     * Bearing, in degrees, clockwise from North, i.e., 0 is North and 90 is East.
     * This can be the compass bearing, or the direction towards the next stop
     * or intermediate location.
     * This should not be direction deduced from the sequence of previous
     * positions, which can be computed from previous data.
     * </pre>
     *
     * <code>optional float bearing = 3;</code>
     * @return Whether the bearing field is set.
     */
    @java.lang.Override
    public boolean hasBearing() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Bearing, in degrees, clockwise from North, i.e., 0 is North and 90 is East.
     * This can be the compass bearing, or the direction towards the next stop
     * or intermediate location.
     * This should not be direction deduced from the sequence of previous
     * positions, which can be computed from previous data.
     * </pre>
     *
     * <code>optional float bearing = 3;</code>
     * @return The bearing.
     */
    @java.lang.Override
    public float getBearing() {
      return bearing_;
    }
    /**
     * <pre>
     * Bearing, in degrees, clockwise from North, i.e., 0 is North and 90 is East.
     * This can be the compass bearing, or the direction towards the next stop
     * or intermediate location.
     * This should not be direction deduced from the sequence of previous
     * positions, which can be computed from previous data.
     * </pre>
     *
     * <code>optional float bearing = 3;</code>
     * @param value The bearing to set.
     * @return This builder for chaining.
     */
    public Builder setBearing(float value) {

      bearing_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Bearing, in degrees, clockwise from North, i.e., 0 is North and 90 is East.
     * This can be the compass bearing, or the direction towards the next stop
     * or intermediate location.
     * This should not be direction deduced from the sequence of previous
     * positions, which can be computed from previous data.
     * </pre>
     *
     * <code>optional float bearing = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearBearing() {
      bitField0_ = (bitField0_ & ~0x00000004);
      bearing_ = 0F;
      onChanged();
      return this;
    }

    private double odometer_ ;
    /**
     * <pre>
     * Odometer value, in meters.
     * </pre>
     *
     * <code>optional double odometer = 4;</code>
     * @return Whether the odometer field is set.
     */
    @java.lang.Override
    public boolean hasOdometer() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Odometer value, in meters.
     * </pre>
     *
     * <code>optional double odometer = 4;</code>
     * @return The odometer.
     */
    @java.lang.Override
    public double getOdometer() {
      return odometer_;
    }
    /**
     * <pre>
     * Odometer value, in meters.
     * </pre>
     *
     * <code>optional double odometer = 4;</code>
     * @param value The odometer to set.
     * @return This builder for chaining.
     */
    public Builder setOdometer(double value) {

      odometer_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Odometer value, in meters.
     * </pre>
     *
     * <code>optional double odometer = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearOdometer() {
      bitField0_ = (bitField0_ & ~0x00000008);
      odometer_ = 0D;
      onChanged();
      return this;
    }

    private float speed_ ;
    /**
     * <pre>
     * Momentary speed measured by the vehicle, in meters per second.
     * </pre>
     *
     * <code>optional float speed = 5;</code>
     * @return Whether the speed field is set.
     */
    @java.lang.Override
    public boolean hasSpeed() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Momentary speed measured by the vehicle, in meters per second.
     * </pre>
     *
     * <code>optional float speed = 5;</code>
     * @return The speed.
     */
    @java.lang.Override
    public float getSpeed() {
      return speed_;
    }
    /**
     * <pre>
     * Momentary speed measured by the vehicle, in meters per second.
     * </pre>
     *
     * <code>optional float speed = 5;</code>
     * @param value The speed to set.
     * @return This builder for chaining.
     */
    public Builder setSpeed(float value) {

      speed_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Momentary speed measured by the vehicle, in meters per second.
     * </pre>
     *
     * <code>optional float speed = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearSpeed() {
      bitField0_ = (bitField0_ & ~0x00000010);
      speed_ = 0F;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:transit_realtime.Position)
  }

  // @@protoc_insertion_point(class_scope:transit_realtime.Position)
  private static final com.google.transit.realtime.Position DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.transit.realtime.Position();
  }

  public static com.google.transit.realtime.Position getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<Position>
      PARSER = new com.google.protobuf.AbstractParser<Position>() {
    @java.lang.Override
    public Position parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Position> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Position> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.transit.realtime.Position getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

