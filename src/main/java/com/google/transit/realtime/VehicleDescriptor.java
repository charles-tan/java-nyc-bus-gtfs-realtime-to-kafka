// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: main/resources/gtfs-realtime.proto

package com.google.transit.realtime;

/**
 * <pre>
 * Identification information for the vehicle performing the trip.
 * </pre>
 *
 * Protobuf type {@code transit_realtime.VehicleDescriptor}
 */
public final class VehicleDescriptor extends
    com.google.protobuf.GeneratedMessageV3.ExtendableMessage<
      VehicleDescriptor> implements
    // @@protoc_insertion_point(message_implements:transit_realtime.VehicleDescriptor)
    VehicleDescriptorOrBuilder {
private static final long serialVersionUID = 0L;
  // Use VehicleDescriptor.newBuilder() to construct.
  private VehicleDescriptor(com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<com.google.transit.realtime.VehicleDescriptor, ?> builder) {
    super(builder);
  }
  private VehicleDescriptor() {
    id_ = "";
    label_ = "";
    licensePlate_ = "";
    wheelchairAccessible_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new VehicleDescriptor();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.transit.realtime.GtfsRealtime.internal_static_transit_realtime_VehicleDescriptor_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.transit.realtime.GtfsRealtime.internal_static_transit_realtime_VehicleDescriptor_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.transit.realtime.VehicleDescriptor.class, com.google.transit.realtime.VehicleDescriptor.Builder.class);
  }

  /**
   * Protobuf enum {@code transit_realtime.VehicleDescriptor.WheelchairAccessible}
   */
  public enum WheelchairAccessible
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * The trip doesn't have information about wheelchair accessibility.
     * This is the **default** behavior. If the static GTFS contains a
     * _wheelchair_accessible_ value, it won't be overwritten.
     * </pre>
     *
     * <code>NO_VALUE = 0;</code>
     */
    NO_VALUE(0),
    /**
     * <pre>
     * The trip has no accessibility value present.
     * This value will overwrite the value from the GTFS.
     * </pre>
     *
     * <code>UNKNOWN = 1;</code>
     */
    UNKNOWN(1),
    /**
     * <pre>
     * The trip is wheelchair accessible.
     * This value will overwrite the value from the GTFS.
     * </pre>
     *
     * <code>WHEELCHAIR_ACCESSIBLE = 2;</code>
     */
    WHEELCHAIR_ACCESSIBLE(2),
    /**
     * <pre>
     * The trip is **not** wheelchair accessible.
     * This value will overwrite the value from the GTFS.
     * </pre>
     *
     * <code>WHEELCHAIR_INACCESSIBLE = 3;</code>
     */
    WHEELCHAIR_INACCESSIBLE(3),
    ;

    /**
     * <pre>
     * The trip doesn't have information about wheelchair accessibility.
     * This is the **default** behavior. If the static GTFS contains a
     * _wheelchair_accessible_ value, it won't be overwritten.
     * </pre>
     *
     * <code>NO_VALUE = 0;</code>
     */
    public static final int NO_VALUE_VALUE = 0;
    /**
     * <pre>
     * The trip has no accessibility value present.
     * This value will overwrite the value from the GTFS.
     * </pre>
     *
     * <code>UNKNOWN = 1;</code>
     */
    public static final int UNKNOWN_VALUE = 1;
    /**
     * <pre>
     * The trip is wheelchair accessible.
     * This value will overwrite the value from the GTFS.
     * </pre>
     *
     * <code>WHEELCHAIR_ACCESSIBLE = 2;</code>
     */
    public static final int WHEELCHAIR_ACCESSIBLE_VALUE = 2;
    /**
     * <pre>
     * The trip is **not** wheelchair accessible.
     * This value will overwrite the value from the GTFS.
     * </pre>
     *
     * <code>WHEELCHAIR_INACCESSIBLE = 3;</code>
     */
    public static final int WHEELCHAIR_INACCESSIBLE_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static WheelchairAccessible valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static WheelchairAccessible forNumber(int value) {
      switch (value) {
        case 0: return NO_VALUE;
        case 1: return UNKNOWN;
        case 2: return WHEELCHAIR_ACCESSIBLE;
        case 3: return WHEELCHAIR_INACCESSIBLE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<WheelchairAccessible>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        WheelchairAccessible> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<WheelchairAccessible>() {
            public WheelchairAccessible findValueByNumber(int number) {
              return WheelchairAccessible.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.transit.realtime.VehicleDescriptor.getDescriptor().getEnumTypes().get(0);
    }

    private static final WheelchairAccessible[] VALUES = values();

    public static WheelchairAccessible valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private WheelchairAccessible(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:transit_realtime.VehicleDescriptor.WheelchairAccessible)
  }

  private int bitField0_;
  public static final int ID_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object id_ = "";
  /**
   * <pre>
   * Internal system identification of the vehicle. Should be unique per
   * vehicle, and can be used for tracking the vehicle as it proceeds through
   * the system.
   * </pre>
   *
   * <code>optional string id = 1;</code>
   * @return Whether the id field is set.
   */
  @java.lang.Override
  public boolean hasId() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Internal system identification of the vehicle. Should be unique per
   * vehicle, and can be used for tracking the vehicle as it proceeds through
   * the system.
   * </pre>
   *
   * <code>optional string id = 1;</code>
   * @return The id.
   */
  @java.lang.Override
  public java.lang.String getId() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        id_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * Internal system identification of the vehicle. Should be unique per
   * vehicle, and can be used for tracking the vehicle as it proceeds through
   * the system.
   * </pre>
   *
   * <code>optional string id = 1;</code>
   * @return The bytes for id.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getIdBytes() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      id_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LABEL_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object label_ = "";
  /**
   * <pre>
   * User visible label, i.e., something that must be shown to the passenger to
   * help identify the correct vehicle.
   * </pre>
   *
   * <code>optional string label = 2;</code>
   * @return Whether the label field is set.
   */
  @java.lang.Override
  public boolean hasLabel() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * User visible label, i.e., something that must be shown to the passenger to
   * help identify the correct vehicle.
   * </pre>
   *
   * <code>optional string label = 2;</code>
   * @return The label.
   */
  @java.lang.Override
  public java.lang.String getLabel() {
    java.lang.Object ref = label_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        label_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * User visible label, i.e., something that must be shown to the passenger to
   * help identify the correct vehicle.
   * </pre>
   *
   * <code>optional string label = 2;</code>
   * @return The bytes for label.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getLabelBytes() {
    java.lang.Object ref = label_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      label_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LICENSE_PLATE_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object licensePlate_ = "";
  /**
   * <pre>
   * The license plate of the vehicle.
   * </pre>
   *
   * <code>optional string license_plate = 3;</code>
   * @return Whether the licensePlate field is set.
   */
  @java.lang.Override
  public boolean hasLicensePlate() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * The license plate of the vehicle.
   * </pre>
   *
   * <code>optional string license_plate = 3;</code>
   * @return The licensePlate.
   */
  @java.lang.Override
  public java.lang.String getLicensePlate() {
    java.lang.Object ref = licensePlate_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        licensePlate_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * The license plate of the vehicle.
   * </pre>
   *
   * <code>optional string license_plate = 3;</code>
   * @return The bytes for licensePlate.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getLicensePlateBytes() {
    java.lang.Object ref = licensePlate_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      licensePlate_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int WHEELCHAIR_ACCESSIBLE_FIELD_NUMBER = 4;
  private int wheelchairAccessible_ = 0;
  /**
   * <code>optional .transit_realtime.VehicleDescriptor.WheelchairAccessible wheelchair_accessible = 4 [default = NO_VALUE];</code>
   * @return Whether the wheelchairAccessible field is set.
   */
  @java.lang.Override public boolean hasWheelchairAccessible() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <code>optional .transit_realtime.VehicleDescriptor.WheelchairAccessible wheelchair_accessible = 4 [default = NO_VALUE];</code>
   * @return The wheelchairAccessible.
   */
  @java.lang.Override public com.google.transit.realtime.VehicleDescriptor.WheelchairAccessible getWheelchairAccessible() {
    com.google.transit.realtime.VehicleDescriptor.WheelchairAccessible result = com.google.transit.realtime.VehicleDescriptor.WheelchairAccessible.forNumber(wheelchairAccessible_);
    return result == null ? com.google.transit.realtime.VehicleDescriptor.WheelchairAccessible.NO_VALUE : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!extensionsAreInitialized()) {
      memoizedIsInitialized = 0;
      return false;
    }
    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    com.google.protobuf.GeneratedMessageV3
      .ExtendableMessage<com.google.transit.realtime.VehicleDescriptor>.ExtensionWriter
        extensionWriter = newExtensionWriter();
    if (((bitField0_ & 0x00000001) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, label_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, licensePlate_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeEnum(4, wheelchairAccessible_);
    }
    extensionWriter.writeUntil(10000, output);
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, label_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, licensePlate_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, wheelchairAccessible_);
    }
    size += extensionsSerializedSize();
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.transit.realtime.VehicleDescriptor)) {
      return super.equals(obj);
    }
    com.google.transit.realtime.VehicleDescriptor other = (com.google.transit.realtime.VehicleDescriptor) obj;

    if (hasId() != other.hasId()) return false;
    if (hasId()) {
      if (!getId()
          .equals(other.getId())) return false;
    }
    if (hasLabel() != other.hasLabel()) return false;
    if (hasLabel()) {
      if (!getLabel()
          .equals(other.getLabel())) return false;
    }
    if (hasLicensePlate() != other.hasLicensePlate()) return false;
    if (hasLicensePlate()) {
      if (!getLicensePlate()
          .equals(other.getLicensePlate())) return false;
    }
    if (hasWheelchairAccessible() != other.hasWheelchairAccessible()) return false;
    if (hasWheelchairAccessible()) {
      if (wheelchairAccessible_ != other.wheelchairAccessible_) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    if (!getExtensionFields().equals(other.getExtensionFields()))
      return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasId()) {
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
    }
    if (hasLabel()) {
      hash = (37 * hash) + LABEL_FIELD_NUMBER;
      hash = (53 * hash) + getLabel().hashCode();
    }
    if (hasLicensePlate()) {
      hash = (37 * hash) + LICENSE_PLATE_FIELD_NUMBER;
      hash = (53 * hash) + getLicensePlate().hashCode();
    }
    if (hasWheelchairAccessible()) {
      hash = (37 * hash) + WHEELCHAIR_ACCESSIBLE_FIELD_NUMBER;
      hash = (53 * hash) + wheelchairAccessible_;
    }
    hash = hashFields(hash, getExtensionFields());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.transit.realtime.VehicleDescriptor parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.transit.realtime.VehicleDescriptor parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.transit.realtime.VehicleDescriptor parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.transit.realtime.VehicleDescriptor parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.transit.realtime.VehicleDescriptor parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.transit.realtime.VehicleDescriptor parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.transit.realtime.VehicleDescriptor parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.transit.realtime.VehicleDescriptor parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.google.transit.realtime.VehicleDescriptor parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.transit.realtime.VehicleDescriptor parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.transit.realtime.VehicleDescriptor parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.transit.realtime.VehicleDescriptor parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.transit.realtime.VehicleDescriptor prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Identification information for the vehicle performing the trip.
   * </pre>
   *
   * Protobuf type {@code transit_realtime.VehicleDescriptor}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<
        com.google.transit.realtime.VehicleDescriptor, Builder> implements
      // @@protoc_insertion_point(builder_implements:transit_realtime.VehicleDescriptor)
      com.google.transit.realtime.VehicleDescriptorOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.transit.realtime.GtfsRealtime.internal_static_transit_realtime_VehicleDescriptor_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.transit.realtime.GtfsRealtime.internal_static_transit_realtime_VehicleDescriptor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.transit.realtime.VehicleDescriptor.class, com.google.transit.realtime.VehicleDescriptor.Builder.class);
    }

    // Construct using com.google.transit.realtime.VehicleDescriptor.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      id_ = "";
      label_ = "";
      licensePlate_ = "";
      wheelchairAccessible_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.transit.realtime.GtfsRealtime.internal_static_transit_realtime_VehicleDescriptor_descriptor;
    }

    @java.lang.Override
    public com.google.transit.realtime.VehicleDescriptor getDefaultInstanceForType() {
      return com.google.transit.realtime.VehicleDescriptor.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.transit.realtime.VehicleDescriptor build() {
      com.google.transit.realtime.VehicleDescriptor result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.transit.realtime.VehicleDescriptor buildPartial() {
      com.google.transit.realtime.VehicleDescriptor result = new com.google.transit.realtime.VehicleDescriptor(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.transit.realtime.VehicleDescriptor result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.id_ = id_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.label_ = label_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.licensePlate_ = licensePlate_;
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.wheelchairAccessible_ = wheelchairAccessible_;
        to_bitField0_ |= 0x00000008;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public <Type> Builder setExtension(
        com.google.protobuf.GeneratedMessage.GeneratedExtension<
            com.google.transit.realtime.VehicleDescriptor, Type> extension,
        Type value) {
      return super.setExtension(extension, value);
    }
    @java.lang.Override
    public <Type> Builder setExtension(
        com.google.protobuf.GeneratedMessage.GeneratedExtension<
            com.google.transit.realtime.VehicleDescriptor, java.util.List<Type>> extension,
        int index, Type value) {
      return super.setExtension(extension, index, value);
    }
    @java.lang.Override
    public <Type> Builder addExtension(
        com.google.protobuf.GeneratedMessage.GeneratedExtension<
            com.google.transit.realtime.VehicleDescriptor, java.util.List<Type>> extension,
        Type value) {
      return super.addExtension(extension, value);
    }
    @java.lang.Override
    public <T> Builder clearExtension(
        com.google.protobuf.GeneratedMessage.GeneratedExtension<
            com.google.transit.realtime.VehicleDescriptor, T> extension) {
      return super.clearExtension(extension);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.transit.realtime.VehicleDescriptor) {
        return mergeFrom((com.google.transit.realtime.VehicleDescriptor)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.transit.realtime.VehicleDescriptor other) {
      if (other == com.google.transit.realtime.VehicleDescriptor.getDefaultInstance()) return this;
      if (other.hasId()) {
        id_ = other.id_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.hasLabel()) {
        label_ = other.label_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (other.hasLicensePlate()) {
        licensePlate_ = other.licensePlate_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (other.hasWheelchairAccessible()) {
        setWheelchairAccessible(other.getWheelchairAccessible());
      }
      this.mergeExtensionFields(other);
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      if (!extensionsAreInitialized()) {
        return false;
      }
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              id_ = input.readBytes();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              label_ = input.readBytes();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              licensePlate_ = input.readBytes();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 32: {
              int tmpRaw = input.readEnum();
              com.google.transit.realtime.VehicleDescriptor.WheelchairAccessible tmpValue =
                  com.google.transit.realtime.VehicleDescriptor.WheelchairAccessible.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(4, tmpRaw);
              } else {
                wheelchairAccessible_ = tmpRaw;
                bitField0_ |= 0x00000008;
              }
              break;
            } // case 32
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object id_ = "";
    /**
     * <pre>
     * Internal system identification of the vehicle. Should be unique per
     * vehicle, and can be used for tracking the vehicle as it proceeds through
     * the system.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @return Whether the id field is set.
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Internal system identification of the vehicle. Should be unique per
     * vehicle, and can be used for tracking the vehicle as it proceeds through
     * the system.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @return The id.
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          id_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Internal system identification of the vehicle. Should be unique per
     * vehicle, and can be used for tracking the vehicle as it proceeds through
     * the system.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @return The bytes for id.
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Internal system identification of the vehicle. Should be unique per
     * vehicle, and can be used for tracking the vehicle as it proceeds through
     * the system.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      id_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Internal system identification of the vehicle. Should be unique per
     * vehicle, and can be used for tracking the vehicle as it proceeds through
     * the system.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearId() {
      id_ = getDefaultInstance().getId();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Internal system identification of the vehicle. Should be unique per
     * vehicle, and can be used for tracking the vehicle as it proceeds through
     * the system.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     * @param value The bytes for id to set.
     * @return This builder for chaining.
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      id_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object label_ = "";
    /**
     * <pre>
     * User visible label, i.e., something that must be shown to the passenger to
     * help identify the correct vehicle.
     * </pre>
     *
     * <code>optional string label = 2;</code>
     * @return Whether the label field is set.
     */
    public boolean hasLabel() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * User visible label, i.e., something that must be shown to the passenger to
     * help identify the correct vehicle.
     * </pre>
     *
     * <code>optional string label = 2;</code>
     * @return The label.
     */
    public java.lang.String getLabel() {
      java.lang.Object ref = label_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          label_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * User visible label, i.e., something that must be shown to the passenger to
     * help identify the correct vehicle.
     * </pre>
     *
     * <code>optional string label = 2;</code>
     * @return The bytes for label.
     */
    public com.google.protobuf.ByteString
        getLabelBytes() {
      java.lang.Object ref = label_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        label_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * User visible label, i.e., something that must be shown to the passenger to
     * help identify the correct vehicle.
     * </pre>
     *
     * <code>optional string label = 2;</code>
     * @param value The label to set.
     * @return This builder for chaining.
     */
    public Builder setLabel(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      label_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * User visible label, i.e., something that must be shown to the passenger to
     * help identify the correct vehicle.
     * </pre>
     *
     * <code>optional string label = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearLabel() {
      label_ = getDefaultInstance().getLabel();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * User visible label, i.e., something that must be shown to the passenger to
     * help identify the correct vehicle.
     * </pre>
     *
     * <code>optional string label = 2;</code>
     * @param value The bytes for label to set.
     * @return This builder for chaining.
     */
    public Builder setLabelBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      label_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.lang.Object licensePlate_ = "";
    /**
     * <pre>
     * The license plate of the vehicle.
     * </pre>
     *
     * <code>optional string license_plate = 3;</code>
     * @return Whether the licensePlate field is set.
     */
    public boolean hasLicensePlate() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The license plate of the vehicle.
     * </pre>
     *
     * <code>optional string license_plate = 3;</code>
     * @return The licensePlate.
     */
    public java.lang.String getLicensePlate() {
      java.lang.Object ref = licensePlate_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          licensePlate_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The license plate of the vehicle.
     * </pre>
     *
     * <code>optional string license_plate = 3;</code>
     * @return The bytes for licensePlate.
     */
    public com.google.protobuf.ByteString
        getLicensePlateBytes() {
      java.lang.Object ref = licensePlate_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        licensePlate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The license plate of the vehicle.
     * </pre>
     *
     * <code>optional string license_plate = 3;</code>
     * @param value The licensePlate to set.
     * @return This builder for chaining.
     */
    public Builder setLicensePlate(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      licensePlate_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The license plate of the vehicle.
     * </pre>
     *
     * <code>optional string license_plate = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearLicensePlate() {
      licensePlate_ = getDefaultInstance().getLicensePlate();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The license plate of the vehicle.
     * </pre>
     *
     * <code>optional string license_plate = 3;</code>
     * @param value The bytes for licensePlate to set.
     * @return This builder for chaining.
     */
    public Builder setLicensePlateBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      licensePlate_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private int wheelchairAccessible_ = 0;
    /**
     * <code>optional .transit_realtime.VehicleDescriptor.WheelchairAccessible wheelchair_accessible = 4 [default = NO_VALUE];</code>
     * @return Whether the wheelchairAccessible field is set.
     */
    @java.lang.Override public boolean hasWheelchairAccessible() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional .transit_realtime.VehicleDescriptor.WheelchairAccessible wheelchair_accessible = 4 [default = NO_VALUE];</code>
     * @return The wheelchairAccessible.
     */
    @java.lang.Override
    public com.google.transit.realtime.VehicleDescriptor.WheelchairAccessible getWheelchairAccessible() {
      com.google.transit.realtime.VehicleDescriptor.WheelchairAccessible result = com.google.transit.realtime.VehicleDescriptor.WheelchairAccessible.forNumber(wheelchairAccessible_);
      return result == null ? com.google.transit.realtime.VehicleDescriptor.WheelchairAccessible.NO_VALUE : result;
    }
    /**
     * <code>optional .transit_realtime.VehicleDescriptor.WheelchairAccessible wheelchair_accessible = 4 [default = NO_VALUE];</code>
     * @param value The wheelchairAccessible to set.
     * @return This builder for chaining.
     */
    public Builder setWheelchairAccessible(com.google.transit.realtime.VehicleDescriptor.WheelchairAccessible value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      wheelchairAccessible_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>optional .transit_realtime.VehicleDescriptor.WheelchairAccessible wheelchair_accessible = 4 [default = NO_VALUE];</code>
     * @return This builder for chaining.
     */
    public Builder clearWheelchairAccessible() {
      bitField0_ = (bitField0_ & ~0x00000008);
      wheelchairAccessible_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:transit_realtime.VehicleDescriptor)
  }

  // @@protoc_insertion_point(class_scope:transit_realtime.VehicleDescriptor)
  private static final com.google.transit.realtime.VehicleDescriptor DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.transit.realtime.VehicleDescriptor();
  }

  public static com.google.transit.realtime.VehicleDescriptor getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<VehicleDescriptor>
      PARSER = new com.google.protobuf.AbstractParser<VehicleDescriptor>() {
    @java.lang.Override
    public VehicleDescriptor parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<VehicleDescriptor> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<VehicleDescriptor> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.transit.realtime.VehicleDescriptor getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

